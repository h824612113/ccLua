cc.Action
cc.Action:startWithTarget(cc.Node)
cc.Action:setOriginalTarget(cc.Node)
cc.Action:clone()
cc.Action:getOriginalTarget()
cc.Action:stop()
cc.Action:update(float)
cc.Action:getTarget()
cc.Action:step(float)
cc.Action:setTag(int)
cc.Action:getTag()
cc.Action:setTarget(cc.Node)
cc.Action:isDone()
cc.Action:reverse()
cc.ActionCamera
cc.ActionCamera:setEye(float,float,float)
cc.ActionCamera:getEye()
cc.ActionCamera:setUp(vec3_table)
cc.ActionCamera:getCenter()
cc.ActionCamera:setCenter(vec3_table)
cc.ActionCamera:getUp()
cc.ActionCamera:startWithTarget(cc.Node)
cc.ActionCamera:clone()
cc.ActionCamera:reverse()
cc.ActionCamera:ActionCamera()
cc.ActionEase
cc.ActionEase:getInnerAction()
cc.ActionEase:startWithTarget(cc.Node)
cc.ActionEase:clone()
cc.ActionEase:stop()
cc.ActionEase:reverse()
cc.ActionEase:update(float)
ccs.ActionFadeFrame
ccs.ActionFadeFrame:getOpacity()
ccs.ActionFadeFrame:getAction(float)
ccs.ActionFadeFrame:setOpacity(int)
ccs.ActionFadeFrame:ActionFadeFrame()
ccs.ActionFrame
ccs.ActionFrame:getAction(float,ccs.ActionFrame)
ccs.ActionFrame:getFrameType()
ccs.ActionFrame:setFrameTime(float)
ccs.ActionFrame:setEasingType(int)
ccs.ActionFrame:getFrameTime()
ccs.ActionFrame:getFrameIndex()
ccs.ActionFrame:setFrameType(int)
ccs.ActionFrame:setFrameIndex(int)
ccs.ActionFrame:setEasingParameter(array_table)
ccs.ActionFrame:getEasingType()
ccs.ActionFrame:ActionFrame()
cc.ActionInstant
cc.ActionInstant:step(float)
cc.ActionInstant:clone()
cc.ActionInstant:reverse()
cc.ActionInstant:isDone()
cc.ActionInstant:update(float)
cc.ActionInterval
cc.ActionInterval:getAmplitudeRate()
cc.ActionInterval:setAmplitudeRate(float)
cc.ActionInterval:getElapsed()
cc.ActionInterval:startWithTarget(cc.Node)
cc.ActionInterval:step(float)
cc.ActionInterval:clone()
cc.ActionInterval:reverse()
cc.ActionInterval:isDone()
cc.ActionManager
cc.ActionManager:getActionByTag(int,cc.Node)
cc.ActionManager:removeActionByTag(int,cc.Node)
cc.ActionManager:removeAllActions()
cc.ActionManager:addAction(cc.Action,cc.Node,bool)
cc.ActionManager:resumeTarget(cc.Node)
cc.ActionManager:update(float)
cc.ActionManager:getNumberOfRunningActionsInTarget(cc.Node)
cc.ActionManager:removeAllActionsFromTarget(cc.Node)
cc.ActionManager:resumeTargets(array_table)
cc.ActionManager:removeAction(cc.Action)
cc.ActionManager:pauseTarget(cc.Node)
cc.ActionManager:pauseAllRunningActions()
cc.ActionManager:ActionManager()
ccs.ActionManagerEx
ccs.ActionManagerEx:playActionByName(char,char,cc.CallFunc)
ccs.ActionManagerEx:getActionByName(char,char)
ccs.ActionManagerEx:releaseActions()
ccs.ActionManagerEx:destroyInstance()
ccs.ActionManagerEx:getInstance()
ccs.ActionMoveFrame
ccs.ActionMoveFrame:setPosition(vec2_table)
ccs.ActionMoveFrame:getAction(float)
ccs.ActionMoveFrame:getPosition()
ccs.ActionMoveFrame:ActionMoveFrame()
ccs.ActionObject
ccs.ActionObject:setCurrentTime(float)
ccs.ActionObject:pause()
ccs.ActionObject:setName(char)
ccs.ActionObject:setUnitTime(float)
ccs.ActionObject:getTotalTime()
ccs.ActionObject:getName()
ccs.ActionObject:stop()
ccs.ActionObject:play(cc.CallFunc)
ccs.ActionObject:getCurrentTime()
ccs.ActionObject:removeActionNode(ccs.ActionNode)
ccs.ActionObject:getLoop()
ccs.ActionObject:addActionNode(ccs.ActionNode)
ccs.ActionObject:getUnitTime()
ccs.ActionObject:isPlaying()
ccs.ActionObject:updateToFrameByTime(float)
ccs.ActionObject:setLoop(bool)
ccs.ActionObject:simulationActionUpdate(float)
ccs.ActionObject:ActionObject()
ccs.ActionRotationFrame
ccs.ActionRotationFrame:setRotation(float)
ccs.ActionRotationFrame:getAction(float,ccs.ActionFrame)
ccs.ActionRotationFrame:getRotation()
ccs.ActionRotationFrame:ActionRotationFrame()
ccs.ActionScaleFrame
ccs.ActionScaleFrame:setScaleY(float)
ccs.ActionScaleFrame:setScaleX(float)
ccs.ActionScaleFrame:getScaleY()
ccs.ActionScaleFrame:getScaleX()
ccs.ActionScaleFrame:getAction(float)
ccs.ActionScaleFrame:ActionScaleFrame()
ccs.ActionTimeline
ccs.ActionTimeline:getTimelines()
ccs.ActionTimeline:getCurrentFrame()
ccs.ActionTimeline:getStartFrame()
ccs.ActionTimeline:pause()
ccs.ActionTimeline:setFrameEventCallFunc(function)
ccs.ActionTimeline:resume()
ccs.ActionTimeline:getDuration()
ccs.ActionTimeline:addTimeline(ccs.Timeline)
ccs.ActionTimeline:getEndFrame()
ccs.ActionTimeline:setCurrentFrame(int)
ccs.ActionTimeline:setTimeSpeed(float)
ccs.ActionTimeline:init()
ccs.ActionTimeline:setDuration(int)
ccs.ActionTimeline:getTimeSpeed()
ccs.ActionTimeline:gotoFrameAndPause(int)
ccs.ActionTimeline:isPlaying()
ccs.ActionTimeline:gotoFrameAndPlay(int,int,int,bool)
ccs.ActionTimeline:removeTimeline(ccs.Timeline)
ccs.ActionTimeline:clearFrameEventCallFunc()
ccs.ActionTimeline:create()
ccs.ActionTimeline:step(float)
ccs.ActionTimeline:startWithTarget(cc.Node)
ccs.ActionTimeline:clone()
ccs.ActionTimeline:reverse()
ccs.ActionTimeline:isDone()
ccs.ActionTimeline:ActionTimeline()
ccs.ActionTimelineCache
ccs.ActionTimelineCache:createAction(string)
ccs.ActionTimelineCache:purge()
ccs.ActionTimelineCache:init()
ccs.ActionTimelineCache:loadAnimationActionWithContent(string,string)
ccs.ActionTimelineCache:loadAnimationActionWithFile(string)
ccs.ActionTimelineCache:removeAction(string)
ccs.ActionTimelineCache:destroyInstance()
ccs.ActionTimelineData
ccs.ActionTimelineData:setActionTag(int)
ccs.ActionTimelineData:getActionTag()
ccs.ActionTimelineData:create(int)
ccs.ActionTintFrame
ccs.ActionTintFrame:getColor()
ccs.ActionTintFrame:getAction(float)
ccs.ActionTintFrame:setColor(color3b_table)
ccs.ActionTintFrame:ActionTintFrame()
cc.ActionTween
cc.ActionTween:create(float,string,float,float)
cc.ActionTween:startWithTarget(cc.Node)
cc.ActionTween:clone()
cc.ActionTween:update(float)
cc.ActionTween:reverse()
ccs.AnchorPointFrame
ccs.AnchorPointFrame:setAnchorPoint(vec2_table)
ccs.AnchorPointFrame:getAnchorPoint()
ccs.AnchorPointFrame:create()
ccs.AnchorPointFrame:clone()
ccs.AnchorPointFrame:AnchorPointFrame()
cc.Animate
cc.Animate:getAnimation()
cc.Animate:setAnimation(cc.Animation)
cc.Animate:create(cc.Animation)
cc.Animate:startWithTarget(cc.Node)
cc.Animate:clone()
cc.Animate:stop()
cc.Animate:reverse()
cc.Animate:update(float)
cc.Animate:setSpeed(float)
cc.Animate:setWeight(float)
cc.Animate:getSpeed()
cc.Animate:getWeight()
cc.Animate:create(cc.Animation3D,float,float)
cc.Animate:step(float)
cc.Animation
cc.Animation:getLoops()
cc.Animation:addSpriteFrame(cc.SpriteFrame)
cc.Animation:setRestoreOriginalFrame(bool)
cc.Animation:clone()
cc.Animation:getDuration()
cc.Animation:setFrames(array_table)
cc.Animation:getFrames()
cc.Animation:setLoops(unsigned)
cc.Animation:setDelayPerUnit(float)
cc.Animation:addSpriteFrameWithFile(string)
cc.Animation:getTotalDelayUnits()
cc.Animation:getDelayPerUnit()
cc.Animation:getRestoreOriginalFrame()
cc.Animation:addSpriteFrameWithTexture(cc.Texture2D,rect_table)
cc.Animation:create(array_table,float,unsigned)
cc.Animation:createWithSpriteFrames(array_table,float,unsigned)
cc.Animation:create(string,string)
cc.AnimationCache
cc.AnimationCache:getAnimation(string)
cc.AnimationCache:addAnimation(cc.Animation,string)
cc.AnimationCache:init()
cc.AnimationCache:addAnimationsWithDictionary(map_table,string)
cc.AnimationCache:removeAnimation(string)
cc.AnimationCache:addAnimationsWithFile(string)
cc.AnimationCache:destroyInstance()
cc.AnimationCache:getInstance()
cc.AnimationCache:AnimationCache()
ccs.AnimationData
ccs.AnimationData:getMovement(string)
ccs.AnimationData:getMovementCount()
ccs.AnimationData:addMovement(ccs.MovementData)
ccs.AnimationData:create()
ccs.AnimationData:AnimationData()
cc.AnimationFrame
cc.AnimationFrame:setSpriteFrame(cc.SpriteFrame)
cc.AnimationFrame:getUserInfo()
cc.AnimationFrame:setDelayUnits(float)
cc.AnimationFrame:clone()
cc.AnimationFrame:getSpriteFrame()
cc.AnimationFrame:getDelayUnits()
cc.AnimationFrame:setUserInfo(map_table)
cc.AnimationFrame:create(cc.SpriteFrame,float,map_table)
cc.Application
cc.Application:getTargetPlatform()
cc.Application:getCurrentLanguageCode()
cc.Application:getCurrentLanguage()
cc.Application:setAnimationInterval(double)
cc.Application:getInstance()
ccs.Armature
ccs.Armature:getBone(string)
ccs.Armature:changeBoneParent(ccs.Bone,string)
ccs.Armature:setAnimation(ccs.ArmatureAnimation)
ccs.Armature:getBoneAtPoint(float,float)
ccs.Armature:getArmatureTransformDirty()
ccs.Armature:setVersion(float)
ccs.Armature:updateOffsetPoint()
ccs.Armature:getParentBone()
ccs.Armature:removeBone(ccs.Bone,bool)
ccs.Armature:getBatchNode()
ccs.Armature:init(string,ccs.Bone)
ccs.Armature:setParentBone(ccs.Bone)
ccs.Armature:drawContour()
ccs.Armature:setBatchNode(ccs.BatchNode)
ccs.Armature:setArmatureData(ccs.ArmatureData)
ccs.Armature:addBone(ccs.Bone,string)
ccs.Armature:getArmatureData()
ccs.Armature:getVersion()
ccs.Armature:getAnimation()
ccs.Armature:getBoneDic()
ccs.Armature:create(string,ccs.Bone)
ccs.Armature:setAnchorPoint(vec2_table)
ccs.Armature:draw(cc.Renderer,mat4_table,unsigned)
ccs.Armature:getAnchorPointInPoints()
ccs.Armature:update(float)
ccs.Armature:getNodeToParentTransform()
ccs.Armature:getBoundingBox()
ccs.Armature:Armature()
ccs.ArmatureAnimation
ccs.ArmatureAnimation:getSpeedScale()
ccs.ArmatureAnimation:pause()
ccs.ArmatureAnimation:setSpeedScale(float)
ccs.ArmatureAnimation:init(ccs.Armature)
ccs.ArmatureAnimation:playWithIndexes(array_table,int,bool)
ccs.ArmatureAnimation:play(string,int,int)
ccs.ArmatureAnimation:gotoAndPause(int)
ccs.ArmatureAnimation:resume()
ccs.ArmatureAnimation:stop()
ccs.ArmatureAnimation:update(float)
ccs.ArmatureAnimation:getAnimationData()
ccs.ArmatureAnimation:playWithIndex(int,int,int)
ccs.ArmatureAnimation:getCurrentMovementID()
ccs.ArmatureAnimation:setAnimationData(ccs.AnimationData)
ccs.ArmatureAnimation:gotoAndPlay(int)
ccs.ArmatureAnimation:playWithNames(array_table,int,bool)
ccs.ArmatureAnimation:getMovementCount()
ccs.ArmatureAnimation:create(ccs.Armature)
ccs.ArmatureAnimation:ArmatureAnimation()
ccs.ArmatureData
ccs.ArmatureData:addBoneData(ccs.BoneData)
ccs.ArmatureData:init()
ccs.ArmatureData:getBoneData(string)
ccs.ArmatureData:create()
ccs.ArmatureData:ArmatureData()
ccs.ArmatureDataManager
ccs.ArmatureDataManager:getAnimationDatas()
ccs.ArmatureDataManager:removeAnimationData(string)
ccs.ArmatureDataManager:addArmatureData(string,ccs.ArmatureData,string)
ccs.ArmatureDataManager:addArmatureFileInfo(string,string,string)
ccs.ArmatureDataManager:removeArmatureFileInfo(string)
ccs.ArmatureDataManager:getTextureDatas()
ccs.ArmatureDataManager:getTextureData(string)
ccs.ArmatureDataManager:getArmatureData(string)
ccs.ArmatureDataManager:getAnimationData(string)
ccs.ArmatureDataManager:addAnimationData(string,ccs.AnimationData,string)
ccs.ArmatureDataManager:init()
ccs.ArmatureDataManager:removeArmatureData(string)
ccs.ArmatureDataManager:getArmatureDatas()
ccs.ArmatureDataManager:removeTextureData(string)
ccs.ArmatureDataManager:addTextureData(string,ccs.TextureData,string)
ccs.ArmatureDataManager:isAutoLoadSpriteFile()
ccs.ArmatureDataManager:addSpriteFrameFromFile(string,string,string)
ccs.ArmatureDataManager:destroyInstance()
ccs.ArmatureDataManager:getInstance()
ccs.ArmatureDisplayData
ccs.ArmatureDisplayData:create()
ccs.ArmatureDisplayData:ArmatureDisplayData()
cc.AssetsManager
cc.AssetsManager:setStoragePath(char)
cc.AssetsManager:setPackageUrl(char)
cc.AssetsManager:checkUpdate()
cc.AssetsManager:getStoragePath()
cc.AssetsManager:update()
cc.AssetsManager:setConnectionTimeout(unsigned)
cc.AssetsManager:setVersionFileUrl(char)
cc.AssetsManager:getPackageUrl()
cc.AssetsManager:getConnectionTimeout()
cc.AssetsManager:getVersion()
cc.AssetsManager:getVersionFileUrl()
cc.AssetsManager:deleteVersion()
cc.AssetsManager:create(char,char,char,function,function,function)
cc.AssetsManager:AssetsManager()
cc.AtlasNode
cc.AtlasNode:updateAtlasValues()
cc.AtlasNode:getTexture()
cc.AtlasNode:setTextureAtlas(cc.TextureAtlas)
cc.AtlasNode:getTextureAtlas()
cc.AtlasNode:getQuadsToDraw()
cc.AtlasNode:setTexture(cc.Texture2D)
cc.AtlasNode:setQuadsToDraw(long)
cc.AtlasNode:create(string,int,int,int)
cc.AtlasNode:draw(cc.Renderer,mat4_table,unsigned)
cc.AtlasNode:isOpacityModifyRGB()
cc.AtlasNode:setColor(color3b_table)
cc.AtlasNode:getColor()
cc.AtlasNode:setOpacityModifyRGB(bool)
cc.AtlasNode:setOpacity(unsigned)
ccs.BaseData
ccs.BaseData:getColor()
ccs.BaseData:setColor(color4b_table)
ccs.BaseData:create()
ccs.BaseData:BaseData()
ccs.BatchNode
ccs.BatchNode:init()
ccs.BatchNode:create()
ccs.BatchNode:addChild(cc.Node,int,int)
ccs.BatchNode:draw(cc.Renderer,mat4_table,unsigned)
ccs.BatchNode:removeChild(cc.Node,bool)
cc.BezierBy
cc.BezierBy:startWithTarget(cc.Node)
cc.BezierBy:clone()
cc.BezierBy:reverse()
cc.BezierBy:update(float)
cc.BezierTo
cc.BezierTo:startWithTarget(cc.Node)
cc.BezierTo:clone()
cc.BezierTo:reverse()
cc.Blink
cc.Blink:create(float,int)
cc.Blink:startWithTarget(cc.Node)
cc.Blink:clone()
cc.Blink:stop()
cc.Blink:reverse()
cc.Blink:update(float)
ccs.Bone
ccs.Bone:isTransformDirty()
ccs.Bone:isIgnoreMovementBoneData()
ccs.Bone:updateZOrder()
ccs.Bone:getDisplayRenderNode()
ccs.Bone:isBlendDirty()
ccs.Bone:addChildBone(ccs.Bone)
ccs.Bone:getWorldInfo()
ccs.Bone:getTween()
ccs.Bone:getParentBone()
ccs.Bone:updateColor()
ccs.Bone:setTransformDirty(bool)
ccs.Bone:getDisplayRenderNodeType()
ccs.Bone:removeDisplay(int)
ccs.Bone:setBoneData(ccs.BoneData)
ccs.Bone:init(string)
ccs.Bone:setParentBone(ccs.Bone)
ccs.Bone:addDisplay(ccs.DisplayData,int)
ccs.Bone:removeFromParent(bool)
ccs.Bone:getColliderDetector()
ccs.Bone:getChildArmature()
ccs.Bone:getTweenData()
ccs.Bone:changeDisplayWithIndex(int,bool)
ccs.Bone:changeDisplayWithName(string,bool)
ccs.Bone:setArmature(ccs.Armature)
ccs.Bone:setBlendDirty(bool)
ccs.Bone:removeChildBone(ccs.Bone,bool)
ccs.Bone:setChildArmature(ccs.Armature)
ccs.Bone:getNodeToArmatureTransform()
ccs.Bone:getDisplayManager()
ccs.Bone:getArmature()
ccs.Bone:getBoneData()
ccs.Bone:create(string)
ccs.Bone:updateDisplayedColor(color3b_table)
ccs.Bone:setLocalZOrder(int)
ccs.Bone:getNodeToWorldTransform()
ccs.Bone:update(float)
ccs.Bone:updateDisplayedOpacity(unsigned)
ccs.Bone:Bone()
ccs.BoneData
ccs.BoneData:getDisplayData(int)
ccs.BoneData:init()
ccs.BoneData:addDisplayData(ccs.DisplayData)
ccs.BoneData:create()
ccs.BoneData:BoneData()
ccui.Button
ccui.Button:getTitleText()
ccui.Button:setTitleFontSize(float)
ccui.Button:9Enabled(bool)
ccui.Button:getCapInsetsDisabledRenderer()
ccui.Button:setTitleColor(color3b_table)
ccui.Button:setCapInsetsDisabledRenderer(rect_table)
ccui.Button:setCapInsets(rect_table)
ccui.Button:loadTextureDisabled(string,int)
ccui.Button:setTitleText(string)
ccui.Button:setCapInsetsNormalRenderer(rect_table)
ccui.Button:loadTexturePressed(string,int)
ccui.Button:setTitleFontName(string)
ccui.Button:getCapInsetsNormalRenderer()
ccui.Button:getCapInsetsPressedRenderer()
ccui.Button:loadTextures(string,string,string,int)
ccui.Button:9Enabled()
ccui.Button:loadTextureNormal(string,int)
ccui.Button:setCapInsetsPressedRenderer(rect_table)
ccui.Button:getTitleFontSize()
ccui.Button:getTitleFontName()
ccui.Button:getTitleColor()
ccui.Button:setPressedActionEnabled(bool)
ccui.Button:create(string,string,string,int)
ccui.Button:createInstance()
ccui.Button:getVirtualRenderer()
ccui.Button:getDescription()
ccui.Button:getVirtualRendererSize()
ccui.Button:ignoreContentAdaptWithSize(bool)
ccui.Button:Button()
cc.CallFunc
cc.CallFunc:execute()
cc.CallFunc:getTargetCallback()
cc.CallFunc:setTargetCallback(cc.Ref)
cc.CallFunc:clone()
cc.CallFunc:update(float)
cc.CallFunc:reverse()
cc.CardinalSplineBy
cc.CardinalSplineBy:startWithTarget(cc.Node)
cc.CardinalSplineBy:clone()
cc.CardinalSplineBy:updatePosition(vec2_table)
cc.CardinalSplineBy:reverse()
cc.CardinalSplineBy:CardinalSplineBy()
cc.CardinalSplineTo
cc.CardinalSplineTo:getPoints()
cc.CardinalSplineTo:updatePosition(vec2_table)
cc.CardinalSplineTo:initWithDuration(float,point_table,float)
cc.CardinalSplineTo:startWithTarget(cc.Node)
cc.CardinalSplineTo:clone()
cc.CardinalSplineTo:reverse()
cc.CardinalSplineTo:update(float)
cc.CardinalSplineTo:CardinalSplineTo()
cc.CatmullRomBy
cc.CatmullRomBy:initWithDuration(float,point_table)
cc.CatmullRomBy:clone()
cc.CatmullRomBy:reverse()
cc.CatmullRomTo
cc.CatmullRomTo:initWithDuration(float,point_table)
cc.CatmullRomTo:clone()
cc.CatmullRomTo:reverse()
cc.CCBAnimationManager
cc.CCBAnimationManager:moveAnimationsFromNode(cc.Node,cc.Node)
cc.CCBAnimationManager:setAutoPlaySequenceId(int)
cc.CCBAnimationManager:getDocumentCallbackNames()
cc.CCBAnimationManager:actionForSoundChannel(cc.CCBSequenceProperty)
cc.CCBAnimationManager:setBaseValue(cc.Value,cc.Node,string)
cc.CCBAnimationManager:getDocumentOutletNodes()
cc.CCBAnimationManager:getLastCompletedSequenceName()
cc.CCBAnimationManager:setRootNode(cc.Node)
cc.CCBAnimationManager:runAnimationsForSequenceNamedTweenDuration(char,float)
cc.CCBAnimationManager:addDocumentOutletName(string)
cc.CCBAnimationManager:getSequences()
cc.CCBAnimationManager:getRootContainerSize()
cc.CCBAnimationManager:setDocumentControllerName(string)
cc.CCBAnimationManager:setObject(cc.Ref,cc.Node,string)
cc.CCBAnimationManager:getContainerSize(cc.Node)
cc.CCBAnimationManager:actionForCallbackChannel(cc.CCBSequenceProperty)
cc.CCBAnimationManager:getDocumentOutletNames()
cc.CCBAnimationManager:addDocumentCallbackControlEvents(int)
cc.CCBAnimationManager:init()
cc.CCBAnimationManager:getKeyframeCallbacks()
cc.CCBAnimationManager:getDocumentCallbackControlEvents()
cc.CCBAnimationManager:setRootContainerSize(size_table)
cc.CCBAnimationManager:runAnimationsForSequenceIdTweenDuration(int,float)
cc.CCBAnimationManager:getRunningSequenceName()
cc.CCBAnimationManager:getAutoPlaySequenceId()
cc.CCBAnimationManager:addDocumentCallbackName(string)
cc.CCBAnimationManager:getRootNode()
cc.CCBAnimationManager:addDocumentOutletNode(cc.Node)
cc.CCBAnimationManager:getSequenceDuration(char)
cc.CCBAnimationManager:addDocumentCallbackNode(cc.Node)
cc.CCBAnimationManager:runAnimationsForSequenceNamed(char)
cc.CCBAnimationManager:getSequenceId(char)
cc.CCBAnimationManager:getDocumentCallbackNodes()
cc.CCBAnimationManager:setSequences(array_table)
cc.CCBAnimationManager:debug()
cc.CCBAnimationManager:getDocumentControllerName()
cc.CCBAnimationManager:CCBAnimationManager()
cc.CCBReader
cc.CCBReader:addOwnerOutletName(string)
cc.CCBReader:getOwnerCallbackNames()
cc.CCBReader:addDocumentCallbackControlEvents(int)
cc.CCBReader:setCCBRootPath(char)
cc.CCBReader:addOwnerOutletNode(cc.Node)
cc.CCBReader:getOwnerCallbackNodes()
cc.CCBReader:readSoundKeyframesForSeq(cc.CCBSequence)
cc.CCBReader:getCCBRootPath()
cc.CCBReader:getOwnerCallbackControlEvents()
cc.CCBReader:getOwnerOutletNodes()
cc.CCBReader:8()
cc.CCBReader:addOwnerCallbackControlEvents(int)
cc.CCBReader:getOwnerOutletNames()
cc.CCBReader:setAnimationManager(cc.CCBAnimationManager)
cc.CCBReader:readCallbackKeyframesForSeq(cc.CCBSequence)
cc.CCBReader:getAnimationManagersForNodes()
cc.CCBReader:getNodesWithAnimationManagers()
cc.CCBReader:getAnimationManager()
cc.CCBReader:setResolutionScale(float)
cc.CCBReader:CCBReader(cc.NodeLoaderLibrary,cc.CCBMemberVariableAssigner,cc.CCBSelectorResolver,cc.NodeLoaderListener)
ccui.CheckBox
ccui.CheckBox:getSelectedState()
ccui.CheckBox:loadTextureBackGroundSelected(string,int)
ccui.CheckBox:loadTextureBackGroundDisabled(string,int)
ccui.CheckBox:addEventListener(function)
ccui.CheckBox:loadTextureFrontCross(string,int)
ccui.CheckBox:loadTextures(string,string,string,string,string,int)
ccui.CheckBox:loadTextureBackGround(string,int)
ccui.CheckBox:setSelectedState(bool)
ccui.CheckBox:loadTextureFrontCrossDisabled(string,int)
ccui.CheckBox:create(string,string,string,string,string,int)
ccui.CheckBox:createInstance()
ccui.CheckBox:getVirtualRenderer()
ccui.CheckBox:getDescription()
ccui.CheckBox:getVirtualRendererSize()
ccui.CheckBox:CheckBox()
cc.ClippingNode
cc.ClippingNode:isInverted()
cc.ClippingNode:setInverted(bool)
cc.ClippingNode:setStencil(cc.Node)
cc.ClippingNode:getAlphaThreshold()
cc.ClippingNode:getStencil()
cc.ClippingNode:setAlphaThreshold(float)
cc.ClippingNode:create(cc.Node)
cc.ClippingNode:visit(cc.Renderer,mat4_table,unsigned)
ccs.ColorFrame
ccs.ColorFrame:getAlpha()
ccs.ColorFrame:getColor()
ccs.ColorFrame:setAlpha(unsigned)
ccs.ColorFrame:setColor(color3b_table)
ccs.ColorFrame:create()
ccs.ColorFrame:apply(float)
ccs.ColorFrame:clone()
ccs.ColorFrame:ColorFrame()
ccs.ComAttribute
ccs.ComAttribute:getFloat(string,float)
ccs.ComAttribute:getString(string,string)
ccs.ComAttribute:setFloat(string,float)
ccs.ComAttribute:setString(string,string)
ccs.ComAttribute:getBool(string,bool)
ccs.ComAttribute:setInt(string,int)
ccs.ComAttribute:parse(string)
ccs.ComAttribute:getInt(string,int)
ccs.ComAttribute:setBool(string,bool)
ccs.ComAttribute:create()
ccs.ComAttribute:createInstance()
ccs.ComAttribute:init()
ccs.ComAttribute:serialize(void)
ccs.ComAudio
ccs.ComAudio:stopAllEffects()
ccs.ComAudio:getEffectsVolume()
ccs.ComAudio:stopEffect(unsigned)
ccs.ComAudio:getBackgroundMusicVolume()
ccs.ComAudio:willPlayBackgroundMusic()
ccs.ComAudio:setBackgroundMusicVolume(float)
ccs.ComAudio:end()
ccs.ComAudio:stopBackgroundMusic(bool)
ccs.ComAudio:pauseBackgroundMusic()
ccs.ComAudio:isBackgroundMusicPlaying()
ccs.ComAudio:isLoop()
ccs.ComAudio:resumeAllEffects()
ccs.ComAudio:pauseAllEffects()
ccs.ComAudio:preloadBackgroundMusic(char)
ccs.ComAudio:playBackgroundMusic(char,bool)
ccs.ComAudio:playEffect(char,bool)
ccs.ComAudio:preloadEffect(char)
ccs.ComAudio:setLoop(bool)
ccs.ComAudio:unloadEffect(char)
ccs.ComAudio:rewindBackgroundMusic()
ccs.ComAudio:pauseEffect(unsigned)
ccs.ComAudio:resumeBackgroundMusic()
ccs.ComAudio:setFile(char)
ccs.ComAudio:setEffectsVolume(float)
ccs.ComAudio:getFile()
ccs.ComAudio:resumeEffect(unsigned)
ccs.ComAudio:create()
ccs.ComAudio:createInstance()
ccs.ComAudio:setEnabled(bool)
ccs.ComAudio:isEnabled()
ccs.ComAudio:serialize(void)
ccs.ComAudio:init()
ccs.ComController
ccs.ComController:create()
ccs.ComController:createInstance()
ccs.ComController:setEnabled(bool)
ccs.ComController:isEnabled()
ccs.ComController:update(float)
ccs.ComController:init()
ccs.ComController:ComController()
cc.Component
cc.Component:setEnabled(bool)
cc.Component:setName(string)
cc.Component:isEnabled()
cc.Component:update(float)
cc.Component:getOwner()
cc.Component:init()
cc.Component:setOwner(cc.Node)
cc.Component:getName()
cc.Component:create()
ccs.ComRender
ccs.ComRender:setNode(cc.Node)
ccs.ComRender:getNode()
ccs.ComRender:create(cc.Node,char)
ccs.ComRender:createInstance()
ccs.ComRender:serialize(void)
cc.Console
cc.Console:stop()
cc.Console:listenOnTCP(int)
cc.Console:listenOnFileDescriptor(int)
cc.Console:log(char)
ccs.ContourData
ccs.ContourData:init()
ccs.ContourData:addVertex(vec2_table)
ccs.ContourData:create()
ccs.ContourData:ContourData()
cc.Control
cc.Control:setEnabled(bool)
cc.Control:onTouchMoved(cc.Touch,cc.Event)
cc.Control:getState()
cc.Control:onTouchEnded(cc.Touch,cc.Event)
cc.Control:sendActionsForControlEvents(int)
cc.Control:setSelected(bool)
cc.Control:isEnabled()
cc.Control:onTouchCancelled(cc.Touch,cc.Event)
cc.Control:needsLayout()
cc.Control:onTouchBegan(cc.Touch,cc.Event)
cc.Control:hasVisibleParents()
cc.Control:isSelected()
cc.Control:isTouchInside(cc.Touch)
cc.Control:setHighlighted(bool)
cc.Control:getTouchLocation(cc.Touch)
cc.Control:isHighlighted()
cc.Control:create()
cc.Control:isOpacityModifyRGB()
cc.Control:setOpacityModifyRGB(bool)
cc.ControlButton
cc.ControlButton:isPushed()
cc.ControlButton:setSelected(bool)
cc.ControlButton:setTitleLabelForState(cc.Node,int)
cc.ControlButton:setAdjustBackgroundImage(bool)
cc.ControlButton:setHighlighted(bool)
cc.ControlButton:setZoomOnTouchDown(bool)
cc.ControlButton:setTitleForState(string,int)
cc.ControlButton:setLabelAnchorPoint(vec2_table)
cc.ControlButton:getLabelAnchorPoint()
cc.ControlButton:getTitleTTFSizeForState(int)
cc.ControlButton:setTitleTTFForState(string,int)
cc.ControlButton:setTitleTTFSizeForState(float,int)
cc.ControlButton:setTitleLabel(cc.Node)
cc.ControlButton:setPreferredSize(size_table)
cc.ControlButton:getCurrentTitleColor()
cc.ControlButton:setEnabled(bool)
cc.ControlButton:getBackgroundSpriteForState(int)
cc.ControlButton:getHorizontalOrigin()
cc.ControlButton:needsLayout()
cc.ControlButton:getCurrentTitle()
cc.ControlButton:getScaleRatio()
cc.ControlButton:getTitleTTFForState(int)
cc.ControlButton:getBackgroundSprite()
cc.ControlButton:getTitleColorForState(int)
cc.ControlButton:setTitleColorForState(color3b_table,int)
cc.ControlButton:doesAdjustBackgroundImage()
cc.ControlButton:setBackgroundSpriteFrameForState(cc.SpriteFrame,int)
cc.ControlButton:setBackgroundSpriteForState(cc.Scale9Sprite,int)
cc.ControlButton:setScaleRatio(float)
cc.ControlButton:setBackgroundSprite(cc.Scale9Sprite)
cc.ControlButton:getTitleLabel()
cc.ControlButton:getPreferredSize()
cc.ControlButton:getVerticalMargin()
cc.ControlButton:getTitleLabelForState(int)
cc.ControlButton:setMargins(int,int)
cc.ControlButton:setTitleBMFontForState(string,int)
cc.ControlButton:getTitleBMFontForState(int)
cc.ControlButton:getZoomOnTouchDown()
cc.ControlButton:getTitleForState(int)
cc.ControlButton:create(string,string,float)
cc.ControlButton:onTouchMoved(cc.Touch,cc.Event)
cc.ControlButton:onTouchEnded(cc.Touch,cc.Event)
cc.ControlButton:setColor(color3b_table)
cc.ControlButton:onTouchCancelled(cc.Touch,cc.Event)
cc.ControlButton:setOpacity(unsigned)
cc.ControlButton:updateDisplayedOpacity(unsigned)
cc.ControlButton:updateDisplayedColor(color3b_table)
cc.ControlButton:onTouchBegan(cc.Touch,cc.Event)
cc.ControlColourPicker
cc.ControlColourPicker:setEnabled(bool)
cc.ControlColourPicker:getHuePicker()
cc.ControlColourPicker:setColor(color3b_table)
cc.ControlColourPicker:hueSliderValueChanged(cc.Ref,int)
cc.ControlColourPicker:getcolourPicker()
cc.ControlColourPicker:setBackground(cc.Sprite)
cc.ControlColourPicker:init()
cc.ControlColourPicker:setcolourPicker(cc.ControlSaturationBrightnessPicker)
cc.ControlColourPicker:colourSliderValueChanged(cc.Ref,int)
cc.ControlColourPicker:setHuePicker(cc.ControlHuePicker)
cc.ControlColourPicker:getBackground()
cc.ControlColourPicker:create()
cc.ControlColourPicker:ControlColourPicker()
cc.ControlHuePicker
cc.ControlHuePicker:setEnabled(bool)
cc.ControlHuePicker:initWithTargetAndPos(cc.Node,vec2_table)
cc.ControlHuePicker:setHue(float)
cc.ControlHuePicker:getStartPos()
cc.ControlHuePicker:getHue()
cc.ControlHuePicker:getSlider()
cc.ControlHuePicker:setBackground(cc.Sprite)
cc.ControlHuePicker:setHuePercentage(float)
cc.ControlHuePicker:getBackground()
cc.ControlHuePicker:getHuePercentage()
cc.ControlHuePicker:setSlider(cc.Sprite)
cc.ControlHuePicker:create(cc.Node,vec2_table)
cc.ControlHuePicker:onTouchMoved(cc.Touch,cc.Event)
cc.ControlHuePicker:onTouchBegan(cc.Touch,cc.Event)
cc.ControlHuePicker:ControlHuePicker()
cc.Controller
cc.Controller:receiveExternalKeyEvent(int,bool)
cc.Controller:getDeviceName()
cc.Controller:isConnected()
cc.Controller:getDeviceId()
cc.Controller:setTag(int)
cc.Controller:getTag()
cc.Controller:startDiscoveryController()
cc.Controller:stopDiscoveryController()
cc.Controller:getControllerByTag(int)
cc.ControlPotentiometer
cc.ControlPotentiometer:setPreviousLocation(vec2_table)
cc.ControlPotentiometer:setValue(float)
cc.ControlPotentiometer:getProgressTimer()
cc.ControlPotentiometer:getMaximumValue()
cc.ControlPotentiometer:angleInDegreesBetweenLineFromPoint_toPoint_toLineFromPoint_toPoint(vec2_table,vec2_table,vec2_table,vec2_table)
cc.ControlPotentiometer:potentiometerBegan(vec2_table)
cc.ControlPotentiometer:setMaximumValue(float)
cc.ControlPotentiometer:getMinimumValue()
cc.ControlPotentiometer:setThumbSprite(cc.Sprite)
cc.ControlPotentiometer:getValue()
cc.ControlPotentiometer:getPreviousLocation()
cc.ControlPotentiometer:distanceBetweenPointAndPoint(vec2_table,vec2_table)
cc.ControlPotentiometer:potentiometerEnded(vec2_table)
cc.ControlPotentiometer:setProgressTimer(cc.ProgressTimer)
cc.ControlPotentiometer:setMinimumValue(float)
cc.ControlPotentiometer:getThumbSprite()
cc.ControlPotentiometer:initWithTrackSprite_ProgressTimer_ThumbSprite(cc.Sprite,cc.ProgressTimer,cc.Sprite)
cc.ControlPotentiometer:potentiometerMoved(vec2_table)
cc.ControlPotentiometer:create(char,char,char)
cc.ControlPotentiometer:isTouchInside(cc.Touch)
cc.ControlPotentiometer:setEnabled(bool)
cc.ControlPotentiometer:onTouchMoved(cc.Touch,cc.Event)
cc.ControlPotentiometer:onTouchEnded(cc.Touch,cc.Event)
cc.ControlPotentiometer:onTouchBegan(cc.Touch,cc.Event)
cc.ControlPotentiometer:ControlPotentiometer()
cc.ControlSaturationBrightnessPicker
cc.ControlSaturationBrightnessPicker:getShadow()
cc.ControlSaturationBrightnessPicker:initWithTargetAndPos(cc.Node,vec2_table)
cc.ControlSaturationBrightnessPicker:getStartPos()
cc.ControlSaturationBrightnessPicker:getOverlay()
cc.ControlSaturationBrightnessPicker:setEnabled(bool)
cc.ControlSaturationBrightnessPicker:getSlider()
cc.ControlSaturationBrightnessPicker:getBackground()
cc.ControlSaturationBrightnessPicker:getSaturation()
cc.ControlSaturationBrightnessPicker:getBrightness()
cc.ControlSaturationBrightnessPicker:create(cc.Node,vec2_table)
cc.ControlSaturationBrightnessPicker:ControlSaturationBrightnessPicker()
cc.ControlSlider
cc.ControlSlider:getSelectedThumbSprite()
cc.ControlSlider:locationFromTouch(cc.Touch)
cc.ControlSlider:setSelectedThumbSprite(cc.Sprite)
cc.ControlSlider:setProgressSprite(cc.Sprite)
cc.ControlSlider:getMaximumAllowedValue()
cc.ControlSlider:getMinimumAllowedValue()
cc.ControlSlider:getMinimumValue()
cc.ControlSlider:setThumbSprite(cc.Sprite)
cc.ControlSlider:setMinimumValue(float)
cc.ControlSlider:setMinimumAllowedValue(float)
cc.ControlSlider:setEnabled(bool)
cc.ControlSlider:setValue(float)
cc.ControlSlider:setMaximumValue(float)
cc.ControlSlider:needsLayout()
cc.ControlSlider:getBackgroundSprite()
cc.ControlSlider:initWithSprites(cc.Sprite,cc.Sprite,cc.Sprite,cc.Sprite)
cc.ControlSlider:getMaximumValue()
cc.ControlSlider:isTouchInside(cc.Touch)
cc.ControlSlider:getValue()
cc.ControlSlider:getThumbSprite()
cc.ControlSlider:getProgressSprite()
cc.ControlSlider:setBackgroundSprite(cc.Sprite)
cc.ControlSlider:setMaximumAllowedValue(float)
cc.ControlSlider:create(cc.Sprite,cc.Sprite,cc.Sprite,cc.Sprite)
cc.ControlSlider:ControlSlider()
cc.ControlStepper
cc.ControlStepper:setMinusSprite(cc.Sprite)
cc.ControlStepper:getMinusLabel()
cc.ControlStepper:setWraps(bool)
cc.ControlStepper:isContinuous()
cc.ControlStepper:getMinusSprite()
cc.ControlStepper:updateLayoutUsingTouchLocation(vec2_table)
cc.ControlStepper:setValueWithSendingEvent(double,bool)
cc.ControlStepper:getPlusLabel()
cc.ControlStepper:stopAutorepeat()
cc.ControlStepper:setMinimumValue(double)
cc.ControlStepper:getPlusSprite()
cc.ControlStepper:setPlusSprite(cc.Sprite)
cc.ControlStepper:setMinusLabel(cc.Label)
cc.ControlStepper:setValue(double)
cc.ControlStepper:setStepValue(double)
cc.ControlStepper:setMaximumValue(double)
cc.ControlStepper:update(float)
cc.ControlStepper:startAutorepeat()
cc.ControlStepper:initWithMinusSpriteAndPlusSprite(cc.Sprite,cc.Sprite)
cc.ControlStepper:getValue()
cc.ControlStepper:setPlusLabel(cc.Label)
cc.ControlStepper:create(cc.Sprite,cc.Sprite)
cc.ControlStepper:onTouchMoved(cc.Touch,cc.Event)
cc.ControlStepper:onTouchEnded(cc.Touch,cc.Event)
cc.ControlStepper:onTouchBegan(cc.Touch,cc.Event)
cc.ControlStepper:ControlStepper()
cc.ControlSwitch
cc.ControlSwitch:setEnabled(bool)
cc.ControlSwitch:setOn(bool,bool)
cc.ControlSwitch:isOn()
cc.ControlSwitch:initWithMaskSprite(cc.Sprite,cc.Sprite,cc.Sprite,cc.Sprite,cc.Label,cc.Label)
cc.ControlSwitch:hasMoved()
cc.ControlSwitch:locationFromTouch(cc.Touch)
cc.ControlSwitch:create(cc.Sprite,cc.Sprite,cc.Sprite,cc.Sprite,cc.Label,cc.Label)
cc.ControlSwitch:onTouchMoved(cc.Touch,cc.Event)
cc.ControlSwitch:onTouchEnded(cc.Touch,cc.Event)
cc.ControlSwitch:onTouchCancelled(cc.Touch,cc.Event)
cc.ControlSwitch:onTouchBegan(cc.Touch,cc.Event)
cc.ControlSwitch:ControlSwitch()
cc.DelayTime
cc.DelayTime:create(float)
cc.DelayTime:clone()
cc.DelayTime:update(float)
cc.DelayTime:reverse()
cc.Director
cc.Director:pause()
cc.Director:setEventDispatcher(cc.EventDispatcher)
cc.Director:pushScene(cc.Scene)
cc.Director:getDeltaTime()
cc.Director:getContentScaleFactor()
cc.Director:getWinSizeInPixels()
cc.Director:getConsole()
cc.Director:pushMatrix(int)
cc.Director:setGLDefaultValues()
cc.Director:setActionManager(cc.ActionManager)
cc.Director:setAlphaBlending(bool)
cc.Director:popToRootScene()
cc.Director:loadMatrix(int,mat4_table)
cc.Director:getNotificationNode()
cc.Director:getWinSize()
cc.Director:getTextureCache()
cc.Director:isSendCleanupToScene()
cc.Director:getVisibleOrigin()
cc.Director:mainLoop()
cc.Director:setDepthTest(bool)
cc.Director:getFrameRate()
cc.Director:getSecondsPerFrame()
cc.Director:convertToUI(vec2_table)
cc.Director:setDefaultValues()
cc.Director:init()
cc.Director:setScheduler(cc.Scheduler)
cc.Director:startAnimation()
cc.Director:getOpenGLView()
cc.Director:getRunningScene()
cc.Director:setViewport()
cc.Director:stopAnimation()
cc.Director:setContentScaleFactor(float)
cc.Director:popToSceneStackLevel(int)
cc.Director:resume()
cc.Director:isNextDeltaTimeZero()
cc.Director:end()
cc.Director:setOpenGLView(cc.GLView)
cc.Director:convertToGL(vec2_table)
cc.Director:purgeCachedData()
cc.Director:getTotalFrames()
cc.Director:runWithScene(cc.Scene)
cc.Director:setNotificationNode(cc.Node)
cc.Director:drawScene()
cc.Director:getZEye()
cc.Director:getMatrix(int)
cc.Director:popScene()
cc.Director:isDisplayStats()
cc.Director:setProjection(int)
cc.Director:loadIdentityMatrix(int)
cc.Director:setNextDeltaTimeZero(bool)
cc.Director:resetMatrixStack()
cc.Director:popMatrix(int)
cc.Director:getVisibleSize()
cc.Director:getScheduler()
cc.Director:setAnimationInterval(double)
cc.Director:getAnimationInterval()
cc.Director:isPaused()
cc.Director:setDisplayStats(bool)
cc.Director:getEventDispatcher()
cc.Director:replaceScene(cc.Scene)
cc.Director:multiplyMatrix(int,mat4_table)
cc.Director:getActionManager()
cc.Director:getInstance()
ccs.DisplayData
ccs.DisplayData:copy(ccs.DisplayData)
ccs.DisplayData:changeDisplayToTexture(string)
ccs.DisplayData:create()
ccs.DisplayData:DisplayData()
ccs.DisplayManager
ccs.DisplayManager:getDisplayRenderNode()
ccs.DisplayManager:getAnchorPointInPoints()
ccs.DisplayManager:getDisplayRenderNodeType()
ccs.DisplayManager:removeDisplay(int)
ccs.DisplayManager:setForceChangeDisplay(bool)
ccs.DisplayManager:init(ccs.Bone)
ccs.DisplayManager:getContentSize()
ccs.DisplayManager:getBoundingBox()
ccs.DisplayManager:addDisplay(ccs.DisplayData,int)
ccs.DisplayManager:containPoint(float,float)
ccs.DisplayManager:changeDisplayWithIndex(int,bool)
ccs.DisplayManager:changeDisplayWithName(string,bool)
ccs.DisplayManager:isForceChangeDisplay()
ccs.DisplayManager:getCurrentDisplayIndex()
ccs.DisplayManager:getAnchorPoint()
ccs.DisplayManager:getDecorativeDisplayList()
ccs.DisplayManager:isVisible()
ccs.DisplayManager:setVisible(bool)
ccs.DisplayManager:create(ccs.Bone)
ccs.DisplayManager:DisplayManager()
cc.DrawNode
cc.DrawNode:drawQuadraticBezier(vec2_table,vec2_table,vec2_table,unsigned,color4f_table)
cc.DrawNode:onDraw(mat4_table,unsigned)
cc.DrawNode:clear()
cc.DrawNode:drawTriangle(vec2_table,vec2_table,vec2_table,color4f_table)
cc.DrawNode:drawDot(vec2_table,float,color4f_table)
cc.DrawNode:drawCubicBezier(vec2_table,vec2_table,vec2_table,vec2_table,unsigned,color4f_table)
cc.DrawNode:drawSegment(vec2_table,vec2_table,float,color4f_table)
cc.DrawNode:create()
cc.DrawNode:draw(cc.Renderer,mat4_table,unsigned)
cc.EaseBackIn
cc.EaseBackIn:create(cc.ActionInterval)
cc.EaseBackIn:clone()
cc.EaseBackIn:update(float)
cc.EaseBackIn:reverse()
cc.EaseBackInOut
cc.EaseBackInOut:create(cc.ActionInterval)
cc.EaseBackInOut:clone()
cc.EaseBackInOut:update(float)
cc.EaseBackInOut:reverse()
cc.EaseBackOut
cc.EaseBackOut:create(cc.ActionInterval)
cc.EaseBackOut:clone()
cc.EaseBackOut:update(float)
cc.EaseBackOut:reverse()
cc.EaseBezierAction
cc.EaseBezierAction:setBezierParamer(float,float,float,float)
cc.EaseBezierAction:create(cc.ActionInterval)
cc.EaseBezierAction:clone()
cc.EaseBezierAction:update(float)
cc.EaseBezierAction:reverse()
cc.EaseBounce
cc.EaseBounce:clone()
cc.EaseBounce:reverse()
cc.EaseBounceIn
cc.EaseBounceIn:create(cc.ActionInterval)
cc.EaseBounceIn:clone()
cc.EaseBounceIn:update(float)
cc.EaseBounceIn:reverse()
cc.EaseBounceInOut
cc.EaseBounceInOut:create(cc.ActionInterval)
cc.EaseBounceInOut:clone()
cc.EaseBounceInOut:update(float)
cc.EaseBounceInOut:reverse()
cc.EaseBounceOut
cc.EaseBounceOut:create(cc.ActionInterval)
cc.EaseBounceOut:clone()
cc.EaseBounceOut:update(float)
cc.EaseBounceOut:reverse()
cc.EaseCircleActionIn
cc.EaseCircleActionIn:create(cc.ActionInterval)
cc.EaseCircleActionIn:clone()
cc.EaseCircleActionIn:update(float)
cc.EaseCircleActionIn:reverse()
cc.EaseCircleActionInOut
cc.EaseCircleActionInOut:create(cc.ActionInterval)
cc.EaseCircleActionInOut:clone()
cc.EaseCircleActionInOut:update(float)
cc.EaseCircleActionInOut:reverse()
cc.EaseCircleActionOut
cc.EaseCircleActionOut:create(cc.ActionInterval)
cc.EaseCircleActionOut:clone()
cc.EaseCircleActionOut:update(float)
cc.EaseCircleActionOut:reverse()
cc.EaseCubicActionIn
cc.EaseCubicActionIn:create(cc.ActionInterval)
cc.EaseCubicActionIn:clone()
cc.EaseCubicActionIn:update(float)
cc.EaseCubicActionIn:reverse()
cc.EaseCubicActionInOut
cc.EaseCubicActionInOut:create(cc.ActionInterval)
cc.EaseCubicActionInOut:clone()
cc.EaseCubicActionInOut:update(float)
cc.EaseCubicActionInOut:reverse()
cc.EaseCubicActionOut
cc.EaseCubicActionOut:create(cc.ActionInterval)
cc.EaseCubicActionOut:clone()
cc.EaseCubicActionOut:update(float)
cc.EaseCubicActionOut:reverse()
cc.EaseElastic
cc.EaseElastic:setPeriod(float)
cc.EaseElastic:getPeriod()
cc.EaseElastic:clone()
cc.EaseElastic:reverse()
cc.EaseElasticIn
cc.EaseElasticIn:create(cc.ActionInterval,float)
cc.EaseElasticIn:clone()
cc.EaseElasticIn:update(float)
cc.EaseElasticIn:reverse()
cc.EaseElasticInOut
cc.EaseElasticInOut:create(cc.ActionInterval,float)
cc.EaseElasticInOut:clone()
cc.EaseElasticInOut:update(float)
cc.EaseElasticInOut:reverse()
cc.EaseElasticOut
cc.EaseElasticOut:create(cc.ActionInterval,float)
cc.EaseElasticOut:clone()
cc.EaseElasticOut:update(float)
cc.EaseElasticOut:reverse()
cc.EaseExponentialIn
cc.EaseExponentialIn:create(cc.ActionInterval)
cc.EaseExponentialIn:clone()
cc.EaseExponentialIn:update(float)
cc.EaseExponentialIn:reverse()
cc.EaseExponentialInOut
cc.EaseExponentialInOut:create(cc.ActionInterval)
cc.EaseExponentialInOut:clone()
cc.EaseExponentialInOut:update(float)
cc.EaseExponentialInOut:reverse()
cc.EaseExponentialOut
cc.EaseExponentialOut:create(cc.ActionInterval)
cc.EaseExponentialOut:clone()
cc.EaseExponentialOut:update(float)
cc.EaseExponentialOut:reverse()
cc.EaseIn
cc.EaseIn:create(cc.ActionInterval,float)
cc.EaseIn:clone()
cc.EaseIn:update(float)
cc.EaseIn:reverse()
cc.EaseInOut
cc.EaseInOut:create(cc.ActionInterval,float)
cc.EaseInOut:clone()
cc.EaseInOut:update(float)
cc.EaseInOut:reverse()
cc.EaseOut
cc.EaseOut:create(cc.ActionInterval,float)
cc.EaseOut:clone()
cc.EaseOut:update(float)
cc.EaseOut:reverse()
cc.EaseQuadraticActionIn
cc.EaseQuadraticActionIn:create(cc.ActionInterval)
cc.EaseQuadraticActionIn:clone()
cc.EaseQuadraticActionIn:update(float)
cc.EaseQuadraticActionIn:reverse()
cc.EaseQuadraticActionInOut
cc.EaseQuadraticActionInOut:create(cc.ActionInterval)
cc.EaseQuadraticActionInOut:clone()
cc.EaseQuadraticActionInOut:update(float)
cc.EaseQuadraticActionInOut:reverse()
cc.EaseQuadraticActionOut
cc.EaseQuadraticActionOut:create(cc.ActionInterval)
cc.EaseQuadraticActionOut:clone()
cc.EaseQuadraticActionOut:update(float)
cc.EaseQuadraticActionOut:reverse()
cc.EaseQuarticActionIn
cc.EaseQuarticActionIn:create(cc.ActionInterval)
cc.EaseQuarticActionIn:clone()
cc.EaseQuarticActionIn:update(float)
cc.EaseQuarticActionIn:reverse()
cc.EaseQuarticActionInOut
cc.EaseQuarticActionInOut:create(cc.ActionInterval)
cc.EaseQuarticActionInOut:clone()
cc.EaseQuarticActionInOut:update(float)
cc.EaseQuarticActionInOut:reverse()
cc.EaseQuarticActionOut
cc.EaseQuarticActionOut:create(cc.ActionInterval)
cc.EaseQuarticActionOut:clone()
cc.EaseQuarticActionOut:update(float)
cc.EaseQuarticActionOut:reverse()
cc.EaseQuinticActionIn
cc.EaseQuinticActionIn:create(cc.ActionInterval)
cc.EaseQuinticActionIn:clone()
cc.EaseQuinticActionIn:update(float)
cc.EaseQuinticActionIn:reverse()
cc.EaseQuinticActionInOut
cc.EaseQuinticActionInOut:create(cc.ActionInterval)
cc.EaseQuinticActionInOut:clone()
cc.EaseQuinticActionInOut:update(float)
cc.EaseQuinticActionInOut:reverse()
cc.EaseQuinticActionOut
cc.EaseQuinticActionOut:create(cc.ActionInterval)
cc.EaseQuinticActionOut:clone()
cc.EaseQuinticActionOut:update(float)
cc.EaseQuinticActionOut:reverse()
cc.EaseRateAction
cc.EaseRateAction:setRate(float)
cc.EaseRateAction:getRate()
cc.EaseRateAction:clone()
cc.EaseRateAction:reverse()
cc.EaseSineIn
cc.EaseSineIn:create(cc.ActionInterval)
cc.EaseSineIn:clone()
cc.EaseSineIn:update(float)
cc.EaseSineIn:reverse()
cc.EaseSineInOut
cc.EaseSineInOut:create(cc.ActionInterval)
cc.EaseSineInOut:clone()
cc.EaseSineInOut:update(float)
cc.EaseSineInOut:reverse()
cc.EaseSineOut
cc.EaseSineOut:create(cc.ActionInterval)
cc.EaseSineOut:clone()
cc.EaseSineOut:update(float)
cc.EaseSineOut:reverse()
cc.EditBox
cc.EditBox:getText()
cc.EditBox:setPlaceholderFontName(char)
cc.EditBox:getPlaceHolder()
cc.EditBox:setFontName(char)
cc.EditBox:setPlaceholderFontSize(int)
cc.EditBox:setInputMode(int)
cc.EditBox:setPlaceholderFontColor(color3b_table)
cc.EditBox:setFontColor(color3b_table)
cc.EditBox:setPlaceholderFont(char,int)
cc.EditBox:setFontSize(int)
cc.EditBox:initWithSizeAndBackgroundSprite(size_table,cc.Scale9Sprite)
cc.EditBox:setPlaceHolder(char)
cc.EditBox:setReturnType(int)
cc.EditBox:setInputFlag(int)
cc.EditBox:getMaxLength()
cc.EditBox:setText(char)
cc.EditBox:setMaxLength(int)
cc.EditBox:setFont(char,int)
cc.EditBox:create(size_table,cc.Scale9Sprite,cc.Scale9Sprite,cc.Scale9Sprite)
cc.EditBox:setAnchorPoint(vec2_table)
cc.EditBox:setPosition(vec2_table)
cc.EditBox:setVisible(bool)
cc.EditBox:setContentSize(size_table)
cc.EditBox:EditBox()
cc.Event
cc.Event:isStopped()
cc.Event:getType()
cc.Event:getCurrentTarget()
cc.Event:stopPropagation()
cc.EventAcceleration
cc.EventController
cc.EventController:getControllerEventType()
cc.EventController:setConnectStatus(bool)
cc.EventController:isConnected()
cc.EventController:setKeyCode(int)
cc.EventController:getController()
cc.EventController:getKeyCode()
cc.EventController:EventController(int,cc.Controller,int)
cc.EventCustom
cc.EventCustom:getEventName()
cc.EventCustom:EventCustom(string)
cc.EventDispatcher
cc.EventDispatcher:pauseEventListenersForTarget(cc.Node,bool)
cc.EventDispatcher:addEventListenerWithSceneGraphPriority(cc.EventListener,cc.Node)
cc.EventDispatcher:setEnabled(bool)
cc.EventDispatcher:addEventListenerWithFixedPriority(cc.EventListener,int)
cc.EventDispatcher:removeEventListener(cc.EventListener)
cc.EventDispatcher:resumeEventListenersForTarget(cc.Node,bool)
cc.EventDispatcher:removeEventListenersForTarget(cc.Node,bool)
cc.EventDispatcher:setPriority(cc.EventListener,int)
cc.EventDispatcher:addCustomEventListener(string,function)
cc.EventDispatcher:dispatchEvent(cc.Event)
cc.EventDispatcher:removeAllEventListeners()
cc.EventDispatcher:removeCustomEventListeners(string)
cc.EventDispatcher:isEnabled()
cc.EventDispatcher:removeEventListenersForType(int)
cc.EventDispatcher:EventDispatcher()
cc.EventFocus
cc.EventFocus:EventFocus(ccui.Widget,ccui.Widget)
ccs.EventFrame
ccs.EventFrame:setEvent(string)
ccs.EventFrame:getEvent()
ccs.EventFrame:create()
ccs.EventFrame:clone()
ccs.EventFrame:EventFrame()
cc.EventKeyboard
cc.EventKeyboard:EventKeyboard(int,bool)
cc.EventListener
cc.EventListener:setEnabled(bool)
cc.EventListener:clone()
cc.EventListener:isEnabled()
cc.EventListener:checkAvailable()
cc.EventListenerAcceleration
cc.EventListenerAcceleration:clone()
cc.EventListenerAcceleration:checkAvailable()
cc.EventListenerController
cc.EventListenerController:create()
cc.EventListenerController:clone()
cc.EventListenerController:checkAvailable()
cc.EventListenerCustom
cc.EventListenerCustom:clone()
cc.EventListenerCustom:checkAvailable()
cc.EventListenerFocus
cc.EventListenerFocus:clone()
cc.EventListenerFocus:checkAvailable()
cc.EventListenerKeyboard
cc.EventListenerKeyboard:clone()
cc.EventListenerKeyboard:checkAvailable()
cc.EventListenerMouse
cc.EventListenerMouse:clone()
cc.EventListenerMouse:checkAvailable()
cc.EventListenerPhysicsContact
cc.EventListenerPhysicsContact:create()
cc.EventListenerPhysicsContact:clone()
cc.EventListenerPhysicsContact:checkAvailable()
cc.EventListenerPhysicsContactWithBodies
cc.EventListenerPhysicsContactWithBodies:hitTest(cc.PhysicsShape,cc.PhysicsShape)
cc.EventListenerPhysicsContactWithBodies:create(cc.PhysicsBody,cc.PhysicsBody)
cc.EventListenerPhysicsContactWithBodies:clone()
cc.EventListenerPhysicsContactWithGroup
cc.EventListenerPhysicsContactWithGroup:hitTest(cc.PhysicsShape,cc.PhysicsShape)
cc.EventListenerPhysicsContactWithGroup:create(int)
cc.EventListenerPhysicsContactWithGroup:clone()
cc.EventListenerPhysicsContactWithShapes
cc.EventListenerPhysicsContactWithShapes:hitTest(cc.PhysicsShape,cc.PhysicsShape)
cc.EventListenerPhysicsContactWithShapes:create(cc.PhysicsShape,cc.PhysicsShape)
cc.EventListenerPhysicsContactWithShapes:clone()
cc.EventListenerTouchAllAtOnce
cc.EventListenerTouchAllAtOnce:clone()
cc.EventListenerTouchAllAtOnce:checkAvailable()
cc.EventListenerTouchOneByOne
cc.EventListenerTouchOneByOne:isSwallowTouches()
cc.EventListenerTouchOneByOne:setSwallowTouches(bool)
cc.EventListenerTouchOneByOne:clone()
cc.EventListenerTouchOneByOne:checkAvailable()
cc.EventMouse
cc.EventMouse:getMouseButton()
cc.EventMouse:setScrollData(float,float)
cc.EventMouse:setMouseButton(int)
cc.EventMouse:getScrollY()
cc.EventMouse:getScrollX()
cc.EventMouse:getCursorX()
cc.EventMouse:getCursorY()
cc.EventMouse:setCursorPosition(float,float)
cc.EventMouse:EventMouse(int)
cc.EventTouch
cc.EventTouch:getEventCode()
cc.EventTouch:setEventCode(int)
cc.EventTouch:EventTouch()
cc.FadeIn
cc.FadeIn:setReverseAction(cc.FadeTo)
cc.FadeIn:create(float)
cc.FadeIn:startWithTarget(cc.Node)
cc.FadeIn:clone()
cc.FadeIn:reverse()
cc.FadeOut
cc.FadeOut:setReverseAction(cc.FadeTo)
cc.FadeOut:create(float)
cc.FadeOut:startWithTarget(cc.Node)
cc.FadeOut:clone()
cc.FadeOut:reverse()
cc.FadeOutBLTiles
cc.FadeOutBLTiles:create(float,size_table)
cc.FadeOutBLTiles:clone()
cc.FadeOutBLTiles:testFunc(size_table,float)
cc.FadeOutDownTiles
cc.FadeOutDownTiles:create(float,size_table)
cc.FadeOutDownTiles:clone()
cc.FadeOutDownTiles:testFunc(size_table,float)
cc.FadeOutTRTiles
cc.FadeOutTRTiles:turnOnTile(vec2_table)
cc.FadeOutTRTiles:turnOffTile(vec2_table)
cc.FadeOutTRTiles:transformTile(vec2_table,float)
cc.FadeOutTRTiles:testFunc(size_table,float)
cc.FadeOutTRTiles:create(float,size_table)
cc.FadeOutTRTiles:clone()
cc.FadeOutTRTiles:update(float)
cc.FadeOutUpTiles
cc.FadeOutUpTiles:transformTile(vec2_table,float)
cc.FadeOutUpTiles:create(float,size_table)
cc.FadeOutUpTiles:clone()
cc.FadeOutUpTiles:testFunc(size_table,float)
cc.FadeTo
cc.FadeTo:create(float,unsigned)
cc.FadeTo:startWithTarget(cc.Node)
cc.FadeTo:clone()
cc.FadeTo:reverse()
cc.FadeTo:update(float)
cc.FileUtils
cc.FileUtils:fullPathForFilename(string)
cc.FileUtils:getStringFromFile(string)
cc.FileUtils:setFilenameLookupDictionary(map_table)
cc.FileUtils:isAbsolutePath(string)
cc.FileUtils:loadFilenameLookupDictionaryFromFile(string)
cc.FileUtils:isPopupNotify()
cc.FileUtils:getValueVectorFromFile(string)
cc.FileUtils:getSearchPaths()
cc.FileUtils:writeToFile(map_table,string)
cc.FileUtils:getValueMapFromFile(string)
cc.FileUtils:setSearchPaths(array_table)
cc.FileUtils:setSearchResolutionsOrder(array_table)
cc.FileUtils:addSearchResolutionsOrder(string,bool)
cc.FileUtils:addSearchPath(string,bool)
cc.FileUtils:isFileExist(string)
cc.FileUtils:purgeCachedEntries()
cc.FileUtils:fullPathFromRelativeFile(string,string)
cc.FileUtils:setPopupNotify(bool)
cc.FileUtils:getSearchResolutionsOrder()
cc.FileUtils:getWritablePath()
cc.FileUtils:destroyInstance()
cc.FileUtils:getInstance()
cc.FiniteTimeAction
cc.FiniteTimeAction:setDuration(float)
cc.FiniteTimeAction:getDuration()
cc.FiniteTimeAction:clone()
cc.FiniteTimeAction:reverse()
cc.FlipX
cc.FlipX:create(bool)
cc.FlipX:clone()
cc.FlipX:update(float)
cc.FlipX:reverse()
cc.FlipX:create(float)
cc.FlipY
cc.FlipY:create(bool)
cc.FlipY:clone()
cc.FlipY:update(float)
cc.FlipY:reverse()
cc.FlipY:create(float)
cc.Follow
cc.Follow:setBoudarySet(bool)
cc.Follow:isBoundarySet()
cc.Follow:create(cc.Node,rect_table)
cc.Follow:step(float)
cc.Follow:clone()
cc.Follow:stop()
cc.Follow:reverse()
cc.Follow:isDone()
ccs.Frame
ccs.Frame:clone()
ccs.Frame:setNode(cc.Node)
ccs.Frame:setTimeline(ccs.Timeline)
ccs.Frame:getFrameIndex()
ccs.Frame:apply(float)
ccs.Frame:isTween()
ccs.Frame:setFrameIndex(unsigned)
ccs.Frame:setTween(bool)
ccs.Frame:getTimeline()
ccs.Frame:getNode()
ccs.FrameData
ccs.FrameData:copy(ccs.BaseData)
ccs.FrameData:create()
ccs.FrameData:FrameData()
cc.GLProgram
cc.GLProgram:getFragmentShaderLog()
cc.GLProgram:initWithByteArrays(char,char)
cc.GLProgram:initWithFilenames(string,string)
cc.GLProgram:use()
cc.GLProgram:getVertexShaderLog()
cc.GLProgram:setUniformsForBuiltins(mat4_table)
cc.GLProgram:updateUniforms()
cc.GLProgram:1i(int,int)
cc.GLProgram:reset()
cc.GLProgram:bindAttribLocation(string,unsigned)
cc.GLProgram:getAttribLocation(string)
cc.GLProgram:link()
cc.GLProgram:createWithByteArrays(char,char)
cc.GLProgram:createWithFilenames(string,string)
cc.GLProgram:GLProgram()
cc.GLProgramCache
cc.GLProgramCache:addGLProgram(cc.GLProgram,string)
cc.GLProgramCache:getGLProgram(string)
cc.GLProgramCache:reloadDefaultGLPrograms()
cc.GLProgramCache:loadDefaultGLPrograms()
cc.GLProgramCache:destroyInstance()
cc.GLProgramCache:getInstance()
cc.GLProgramCache:GLProgramCache()
cc.GLProgramState
cc.GLProgramState:setUniformTexture(int,unsigned)
cc.GLProgramState:4(string,mat4_table)
cc.GLProgramState:applyUniforms()
cc.GLProgramState:applyGLProgram(mat4_table)
cc.GLProgramState:getUniformCount()
cc.GLProgramState:applyAttributes()
cc.GLProgramState:setUniformFloat(string,float)
cc.GLProgramState:3(string,vec3_table)
cc.GLProgramState:setUniformInt(string,int)
cc.GLProgramState:getVertexAttribCount()
cc.GLProgramState:4(string,vec4_table)
cc.GLProgramState:setGLProgram(cc.GLProgram)
cc.GLProgramState:2(string,vec2_table)
cc.GLProgramState:getVertexAttribsFlags()
cc.GLProgramState:apply(mat4_table)
cc.GLProgramState:getGLProgram()
cc.GLProgramState:create(cc.GLProgram)
cc.GLProgramState:getOrCreateWithGLProgramName(string)
cc.GLProgramState:getOrCreateWithGLProgram(cc.GLProgram)
cc.GLView
cc.GLView:createWithRect(string,rect_table,float)
cc.GLView:create(string)
cc.GLView:createWithFullScreen(string)
cc.GLView:setIMEKeyboardState(bool)
cc.GLView:isOpenGLReady()
cc.GLViewProtocol
cc.GLViewProtocol:setFrameSize(float,float)
cc.GLViewProtocol:getViewPortRect()
cc.GLViewProtocol:setIMEKeyboardState(bool)
cc.GLViewProtocol:setScissorInPoints(float,float,float,float)
cc.GLViewProtocol:getViewName()
cc.GLViewProtocol:isOpenGLReady()
cc.GLViewProtocol:end()
cc.GLViewProtocol:getScaleY()
cc.GLViewProtocol:getScaleX()
cc.GLViewProtocol:getVisibleOrigin()
cc.GLViewProtocol:getFrameSize()
cc.GLViewProtocol:getDesignResolutionSize()
cc.GLViewProtocol:pollInputEvents()
cc.GLViewProtocol:swapBuffers()
cc.GLViewProtocol:setDesignResolutionSize(float,float,int)
cc.GLViewProtocol:getResolutionPolicy()
cc.GLViewProtocol:setViewPortInPoints(float,float,float,float)
cc.GLViewProtocol:getScissorRect()
cc.GLViewProtocol:setViewName(string)
cc.GLViewProtocol:getVisibleRect()
cc.GLViewProtocol:getVisibleSize()
cc.GLViewProtocol:isScissorEnabled()
cc.Grid
cc.Grid:create(size_table,cc.Texture2D,bool)
cc.Grid:calculateVertexPoints()
cc.Grid:blit()
cc.Grid:reuse()
cc.Grid:3D()
cc.Grid:getGrid()
cc.Grid:clone()
cc.GridAction
cc.GridAction:getGrid()
cc.GridAction:startWithTarget(cc.Node)
cc.GridAction:clone()
cc.GridAction:reverse()
cc.GridBase
cc.GridBase:setGridSize(size_table)
cc.GridBase:calculateVertexPoints()
cc.GridBase:afterDraw(cc.Node)
cc.GridBase:beforeDraw()
cc.GridBase:isTextureFlipped()
cc.GridBase:getGridSize()
cc.GridBase:getStep()
cc.GridBase:2DProjection()
cc.GridBase:setStep(vec2_table)
cc.GridBase:setTextureFlipped(bool)
cc.GridBase:blit()
cc.GridBase:setActive(bool)
cc.GridBase:getReuseGrid()
cc.GridBase:initWithSize(size_table,cc.Texture2D,bool)
cc.GridBase:setReuseGrid(int)
cc.GridBase:isActive()
cc.GridBase:reuse()
cc.GridBase:create(size_table,cc.Texture2D,bool)
ccs.GUIReader
ccs.GUIReader:setFilePath(string)
ccs.GUIReader:widgetFromJsonFile(char)
ccs.GUIReader:getFilePath()
ccs.GUIReader:widgetFromBinaryFile(char)
ccs.GUIReader:getVersionInteger(char)
ccs.GUIReader:destroyInstance()
ccs.GUIReader:getInstance()
ccui.HBox
ccui.HBox:create(size_table)
ccui.HBox:HBox()
ccui.Helper
ccui.Helper:seekWidgetByTag(ccui.Widget,int)
ccui.Helper:seekActionWidgetByActionTag(ccui.Widget,int)
ccui.Helper:seekWidgetByName(ccui.Widget,string)
cc.Hide
cc.Hide:create()
cc.Hide:clone()
cc.Hide:update(float)
cc.Hide:reverse()
cc.Image
cc.Image:hasPremultipliedAlpha()
cc.Image:saveToFile(string,bool)
cc.Image:getBitPerPixel()
cc.Image:hasAlpha()
cc.Image:isCompressed()
cc.Image:getHeight()
cc.Image:initWithImageFile(string)
cc.Image:getWidth()
cc.Image:isPremultipliedAlpha()
cc.Image:getFileType()
cc.Image:getNumberOfMipmaps()
cc.Image:getRenderFormat()
cc.Image:Image()
ccui.ImageView
ccui.ImageView:loadTexture(string,int)
ccui.ImageView:9Enabled(bool)
ccui.ImageView:setTextureRect(rect_table)
ccui.ImageView:setCapInsets(rect_table)
ccui.ImageView:getCapInsets()
ccui.ImageView:9Enabled()
ccui.ImageView:create(string,int)
ccui.ImageView:createInstance()
ccui.ImageView:getVirtualRenderer()
ccui.ImageView:getDescription()
ccui.ImageView:getVirtualRendererSize()
ccui.ImageView:ignoreContentAdaptWithSize(bool)
ccui.ImageView:ImageView()
ccs.InnerActionFrame
ccs.InnerActionFrame:getInnerActionType()
ccs.InnerActionFrame:setStartFrameIndex(int)
ccs.InnerActionFrame:setInnerActionType(int)
ccs.InnerActionFrame:getStartFrameIndex()
ccs.InnerActionFrame:create()
ccs.InnerActionFrame:clone()
ccs.InnerActionFrame:InnerActionFrame()
cc.JumpBy
cc.JumpBy:create(float,vec2_table,float,int)
cc.JumpBy:startWithTarget(cc.Node)
cc.JumpBy:clone()
cc.JumpBy:reverse()
cc.JumpBy:update(float)
cc.JumpTiles
cc.JumpTiles:getAmplitudeRate()
cc.JumpTiles:setAmplitude(float)
cc.JumpTiles:setAmplitudeRate(float)
cc.JumpTiles:getAmplitude()
cc.JumpTiles:create(float,size_table,unsigned,float)
cc.JumpTiles:clone()
cc.JumpTiles:update(float)
cc.JumpTo
cc.JumpTo:create(float,vec2_table,float,int)
cc.JumpTo:startWithTarget(cc.Node)
cc.JumpTo:clone()
cc.JumpTo:reverse()
cc.Label
cc.Label:isClipMarginEnabled()
cc.Label:enableShadow()
cc.Label:setDimensions(unsigned,unsigned)
cc.Label:getString()
cc.Label:getHeight()
cc.Label:disableEffect()
cc.Label:setTTFConfig(cc._ttfConfig)
cc.Label:getTextColor()
cc.Label:setWidth(unsigned)
cc.Label:getMaxLineWidth()
cc.Label:getHorizontalAlignment()
cc.Label:setClipMarginEnabled(bool)
cc.Label:setString(string)
cc.Label:setSystemFontName(string)
cc.Label:setBMFontFilePath(string,vec2_table)
cc.Label:getFontAtlas()
cc.Label:setLineHeight(float)
cc.Label:setSystemFontSize(float)
cc.Label:updateContent()
cc.Label:getStringLength()
cc.Label:setLineBreakWithoutSpace(bool)
cc.Label:getStringNumLines()
cc.Label:enableOutline(color4b_table,int)
cc.Label:getAdditionalKerning()
cc.Label:setCharMap(string,int,int,int)
cc.Label:getDimensions()
cc.Label:setMaxLineWidth(unsigned)
cc.Label:getSystemFontName()
cc.Label:setVerticalAlignment(int)
cc.Label:getLineHeight()
cc.Label:getTTFConfig()
cc.Label:getVerticalAlignment()
cc.Label:setTextColor(color4b_table)
cc.Label:setHeight(unsigned)
cc.Label:getWidth()
cc.Label:enableGlow(color4b_table)
cc.Label:getLetter(int)
cc.Label:setAdditionalKerning(float)
cc.Label:getSystemFontSize()
cc.Label:getTextAlignment()
cc.Label:getBMFontFilePath()
cc.Label:setHorizontalAlignment(int)
cc.Label:setAlignment(int,int)
cc.Label:createWithBMFont(string,string,int,int,vec2_table)
cc.Label:create()
cc.Label:createWithCharMap(string,int,int,int)
cc.Label:createWithSystemFont(string,string,float,size_table,int,int)
cc.Label:draw(cc.Renderer,mat4_table,unsigned)
cc.Label:addChild(cc.Node,int,int)
cc.Label:setScaleY(float)
cc.Label:setScaleX(float)
cc.Label:isOpacityModifyRGB()
cc.Label:getScaleY()
cc.Label:setBlendFunc(cc.BlendFunc)
cc.Label:visit(cc.Renderer,mat4_table,unsigned)
cc.Label:getScaleX()
cc.Label:getDescription()
cc.Label:setOpacityModifyRGB(bool)
cc.Label:setScale(float)
cc.Label:sortAllChildren()
cc.Label:updateDisplayedOpacity(unsigned)
cc.Label:getContentSize()
cc.Label:getBoundingBox()
cc.Label:updateDisplayedColor(color3b_table)
cc.LabelAtlas
cc.LabelAtlas:setString(string)
cc.LabelAtlas:initWithString(string,cc.Texture2D,int,int,int)
cc.LabelAtlas:updateAtlasValues()
cc.LabelAtlas:getString()
cc.LabelAtlas:create(string,string,int,int,int)
cc.LabelAtlas:getDescription()
cc.Layer
cc.Layer:create()
cc.Layer:getDescription()
cc.LayerColor
cc.LayerColor:changeWidthAndHeight(float,float)
cc.LayerColor:changeHeight(float)
cc.LayerColor:changeWidth(float)
cc.LayerColor:create(color4b_table,float,float)
cc.LayerColor:draw(cc.Renderer,mat4_table,unsigned)
cc.LayerColor:getDescription()
cc.LayerColor:setContentSize(size_table)
cc.LayerGradient
cc.LayerGradient:getStartColor()
cc.LayerGradient:isCompressedInterpolation()
cc.LayerGradient:getStartOpacity()
cc.LayerGradient:setVector(vec2_table)
cc.LayerGradient:setStartOpacity(unsigned)
cc.LayerGradient:setCompressedInterpolation(bool)
cc.LayerGradient:setEndOpacity(unsigned)
cc.LayerGradient:getVector()
cc.LayerGradient:setEndColor(color3b_table)
cc.LayerGradient:getEndColor()
cc.LayerGradient:getEndOpacity()
cc.LayerGradient:setStartColor(color3b_table)
cc.LayerGradient:create(color4b_table,color4b_table,vec2_table)
cc.LayerGradient:getDescription()
cc.LayerMultiplex
cc.LayerMultiplex:switchToAndReleaseMe(int)
cc.LayerMultiplex:addLayer(cc.Layer)
cc.LayerMultiplex:switchTo(int)
cc.LayerMultiplex:getDescription()
ccui.Layout
ccui.Layout:setBackGroundColorVector(vec2_table)
ccui.Layout:setClippingType(int)
ccui.Layout:setBackGroundColorType(int)
ccui.Layout:setLoopFocus(bool)
ccui.Layout:setBackGroundImageColor(color3b_table)
ccui.Layout:getBackGroundColorVector()
ccui.Layout:getClippingType()
ccui.Layout:isLoopFocus()
ccui.Layout:removeBackGroundImage()
ccui.Layout:getBackGroundColorOpacity()
ccui.Layout:isClippingEnabled()
ccui.Layout:setBackGroundImageOpacity(unsigned)
ccui.Layout:setBackGroundImage(string,int)
ccui.Layout:setBackGroundColor(color3b_table,color3b_table)
ccui.Layout:requestDoLayout()
ccui.Layout:getBackGroundImageCapInsets()
ccui.Layout:getBackGroundColor()
ccui.Layout:setClippingEnabled(bool)
ccui.Layout:getBackGroundImageColor()
ccui.Layout:9Enabled()
ccui.Layout:getBackGroundColorType()
ccui.Layout:getBackGroundEndColor()
ccui.Layout:setBackGroundColorOpacity(unsigned)
ccui.Layout:getBackGroundImageOpacity()
ccui.Layout:isPassFocusToChild()
ccui.Layout:setBackGroundImageCapInsets(rect_table)
ccui.Layout:getBackGroundImageTextureSize()
ccui.Layout:getLayoutType()
ccui.Layout:setPassFocusToChild(bool)
ccui.Layout:getBackGroundStartColor()
ccui.Layout:9Enabled(bool)
ccui.Layout:setLayoutType(int)
ccui.Layout:create()
ccui.Layout:createInstance()
ccui.Layout:addChild(cc.Node,int,string)
ccui.Layout:getDescription()
ccui.Layout:removeAllChildrenWithCleanup(bool)
ccui.Layout:removeAllChildren()
ccui.Layout:findNextFocusedWidget(int,ccui.Widget)
ccui.Layout:removeChild(cc.Node,bool)
ccui.Layout:Layout()
ccui.LayoutParameter
ccui.LayoutParameter:clone()
ccui.LayoutParameter:getLayoutType()
ccui.LayoutParameter:createCloneInstance()
ccui.LayoutParameter:copyProperties(ccui.LayoutParameter)
ccui.LayoutParameter:create()
ccui.LayoutParameter:LayoutParameter()
cc.Lens
cc.Lens:setPosition(vec2_table)
cc.Lens:setConcave(bool)
cc.Lens:setLensEffect(float)
cc.Lens:getPosition()
cc.Lens:getLensEffect()
cc.Lens:create(float,size_table,vec2_table,float)
cc.Lens:clone()
cc.Lens:update(float)
ccui.LinearLayoutParameter
ccui.LinearLayoutParameter:setGravity(int)
ccui.LinearLayoutParameter:getGravity()
ccui.LinearLayoutParameter:create()
ccui.LinearLayoutParameter:createCloneInstance()
ccui.LinearLayoutParameter:copyProperties(ccui.LayoutParameter)
ccui.LinearLayoutParameter:LinearLayoutParameter()
cc.Liquid
cc.Liquid:getAmplitudeRate()
cc.Liquid:setAmplitude(float)
cc.Liquid:setAmplitudeRate(float)
cc.Liquid:getAmplitude()
cc.Liquid:create(float,size_table,unsigned,float)
cc.Liquid:clone()
cc.Liquid:update(float)
ccui.ListView
ccui.ListView:getIndex(ccui.Widget)
ccui.ListView:removeAllItems()
ccui.ListView:setGravity(int)
ccui.ListView:pushBackCustomItem(ccui.Widget)
ccui.ListView:getItems()
ccui.ListView:removeItem(long)
ccui.ListView:getCurSelectedIndex()
ccui.ListView:insertDefaultItem(long)
ccui.ListView:requestRefreshView()
ccui.ListView:setItemsMargin(float)
ccui.ListView:refreshView()
ccui.ListView:removeLastItem()
ccui.ListView:getItemsMargin()
ccui.ListView:addEventListener(function)
ccui.ListView:getItem(long)
ccui.ListView:setItemModel(ccui.Widget)
ccui.ListView:doLayout()
ccui.ListView:pushBackDefaultItem()
ccui.ListView:insertCustomItem(ccui.Widget,long)
ccui.ListView:create()
ccui.ListView:createInstance()
ccui.ListView:addChild(cc.Node,int,string)
ccui.ListView:setDirection(int)
ccui.ListView:getDescription()
ccui.ListView:removeAllChildrenWithCleanup(bool)
ccui.ListView:removeAllChildren()
ccui.ListView:removeChild(cc.Node,bool)
ccui.ListView:ListView()
ccui.LoadingBar
ccui.LoadingBar:setPercent(float)
ccui.LoadingBar:loadTexture(string,int)
ccui.LoadingBar:setDirection(int)
ccui.LoadingBar:9Enabled(bool)
ccui.LoadingBar:setCapInsets(rect_table)
ccui.LoadingBar:getDirection()
ccui.LoadingBar:getCapInsets()
ccui.LoadingBar:9Enabled()
ccui.LoadingBar:getPercent()
ccui.LoadingBar:create(string,float)
ccui.LoadingBar:createInstance()
ccui.LoadingBar:getVirtualRenderer()
ccui.LoadingBar:getDescription()
ccui.LoadingBar:getVirtualRendererSize()
ccui.LoadingBar:ignoreContentAdaptWithSize(bool)
ccui.LoadingBar:LoadingBar()
.cc
.ccexp
.sp
.ccs
.ccui
cc.Menu
cc.Menu:setEnabled(bool)
cc.Menu:alignItemsVertically()
cc.Menu:isEnabled()
cc.Menu:alignItemsHorizontallyWithPadding(float)
cc.Menu:alignItemsVerticallyWithPadding(float)
cc.Menu:alignItemsHorizontally()
cc.Menu:addChild(cc.Node,int,string)
cc.Menu:isOpacityModifyRGB()
cc.Menu:getDescription()
cc.Menu:setOpacityModifyRGB(bool)
cc.Menu:removeChild(cc.Node,bool)
cc.MenuItem
cc.MenuItem:setEnabled(bool)
cc.MenuItem:activate()
cc.MenuItem:isEnabled()
cc.MenuItem:selected()
cc.MenuItem:isSelected()
cc.MenuItem:unselected()
cc.MenuItem:rect()
cc.MenuItem:getDescription()
cc.MenuItemAtlasFont
cc.MenuItemFont
cc.MenuItemFont:getFontSizeObj()
cc.MenuItemFont:getFontNameObj()
cc.MenuItemFont:setFontSizeObj(int)
cc.MenuItemFont:setFontNameObj(string)
cc.MenuItemFont:setFontName(string)
cc.MenuItemFont:getFontSize()
cc.MenuItemFont:getFontName()
cc.MenuItemFont:setFontSize(int)
cc.MenuItemImage
cc.MenuItemImage:setDisabledSpriteFrame(cc.SpriteFrame)
cc.MenuItemImage:setSelectedSpriteFrame(cc.SpriteFrame)
cc.MenuItemImage:setNormalSpriteFrame(cc.SpriteFrame)
cc.MenuItemLabel
cc.MenuItemLabel:getDisabledColor()
cc.MenuItemLabel:setString(string)
cc.MenuItemLabel:setLabel(cc.Node)
cc.MenuItemLabel:setDisabledColor(color3b_table)
cc.MenuItemLabel:getLabel()
cc.MenuItemLabel:setEnabled(bool)
cc.MenuItemLabel:activate()
cc.MenuItemLabel:unselected()
cc.MenuItemLabel:selected()
cc.MenuItemSprite
cc.MenuItemSprite:setEnabled(bool)
cc.MenuItemSprite:selected()
cc.MenuItemSprite:setNormalImage(cc.Node)
cc.MenuItemSprite:setDisabledImage(cc.Node)
cc.MenuItemSprite:setSelectedImage(cc.Node)
cc.MenuItemSprite:getDisabledImage()
cc.MenuItemSprite:getSelectedImage()
cc.MenuItemSprite:getNormalImage()
cc.MenuItemSprite:unselected()
cc.MenuItemToggle
cc.MenuItemToggle:setSubItems(array_table)
cc.MenuItemToggle:getSelectedIndex()
cc.MenuItemToggle:addSubItem(cc.MenuItem)
cc.MenuItemToggle:getSelectedItem()
cc.MenuItemToggle:setSelectedIndex(unsigned)
cc.MenuItemToggle:setEnabled(bool)
cc.MenuItemToggle:activate()
cc.MenuItemToggle:unselected()
cc.MenuItemToggle:selected()
cc.Mesh
cc.Mesh:restore()
cc.Mesh:getMeshVertexAttribCount()
cc.Mesh:getIndexFormat()
cc.Mesh:getVertexSizeInBytes()
cc.Mesh:getPrimitiveType()
cc.Mesh:getIndexCount()
cc.Mesh:getVertexBuffer()
cc.Mesh:getMeshVertexAttribute(int)
cc.Mesh:getIndexBuffer()
cc.Mesh:hasVertexAttrib(int)
cc.MotionStreak
cc.MotionStreak:reset()
cc.MotionStreak:setTexture(cc.Texture2D)
cc.MotionStreak:getTexture()
cc.MotionStreak:tintWithColor(color3b_table)
cc.MotionStreak:setStartingPositionInitialized(bool)
cc.MotionStreak:isStartingPositionInitialized()
cc.MotionStreak:isFastMode()
cc.MotionStreak:setFastMode(bool)
cc.MotionStreak:create(float,float,float,color3b_table,string)
cc.MotionStreak:isOpacityModifyRGB()
cc.MotionStreak:setPositionY(float)
cc.MotionStreak:setPositionX(float)
cc.MotionStreak:getPositionY()
cc.MotionStreak:getPositionX()
cc.MotionStreak:setOpacity(unsigned)
cc.MotionStreak:setOpacityModifyRGB(bool)
cc.MotionStreak:getOpacity()
cc.MotionStreak:setPosition(float,float)
cc.MotionStreak:getPosition(float,float)
cc.MoveBy
cc.MoveBy:create(float,vec2_table)
cc.MoveBy:startWithTarget(cc.Node)
cc.MoveBy:clone()
cc.MoveBy:reverse()
cc.MoveBy:update(float)
ccs.MovementBoneData
ccs.MovementBoneData:init()
ccs.MovementBoneData:getFrameData(int)
ccs.MovementBoneData:addFrameData(ccs.FrameData)
ccs.MovementBoneData:create()
ccs.MovementBoneData:MovementBoneData()
ccs.MovementData
ccs.MovementData:getMovementBoneData(string)
ccs.MovementData:addMovementBoneData(ccs.MovementBoneData)
ccs.MovementData:create()
ccs.MovementData:MovementData()
cc.MoveTo
cc.MoveTo:create(float,vec2_table)
cc.MoveTo:startWithTarget(cc.Node)
cc.MoveTo:clone()
cc.Node
cc.Node:addChild(cc.Node,int,string)
cc.Node:removeComponent(string)
cc.Node:setPhysicsBody(cc.PhysicsBody)
cc.Node:getDescription()
cc.Node:setRotationSkewY(float)
cc.Node:setOpacityModifyRGB(bool)
cc.Node:setCascadeOpacityEnabled(bool)
cc.Node:getChildren()
cc.Node:setOnExitCallback(function)
cc.Node:pause()
cc.Node:convertToWorldSpaceAR(vec2_table)
cc.Node:isIgnoreAnchorPointForPosition()
cc.Node:getChildByName(string)
cc.Node:updateDisplayedOpacity(unsigned)
cc.Node:setRotation(float)
cc.Node:setScaleZ(float)
cc.Node:setScaleY(float)
cc.Node:setScaleX(float)
cc.Node:setRotationSkewX(float)
cc.Node:setonEnterTransitionDidFinishCallback(function)
cc.Node:removeAllComponents()
cc.Node:_setLocalZOrder(int)
cc.Node:getTag()
cc.Node:getGLProgram()
cc.Node:getNodeToWorldTransform()
cc.Node:3D()
cc.Node:removeChild(cc.Node,bool)
cc.Node:convertToWorldSpace(vec2_table)
cc.Node:getScene()
cc.Node:getEventDispatcher()
cc.Node:setSkewX(float)
cc.Node:setGLProgramState(cc.GLProgramState)
cc.Node:setOnEnterCallback(function)
cc.Node:getOpacity()
cc.Node:setNormalizedPosition(vec2_table)
cc.Node:setonExitTransitionDidStartCallback(function)
cc.Node:convertTouchToNodeSpace(cc.Touch)
cc.Node:removeAllChildrenWithCleanup(bool)
cc.Node:getNodeToParentAffineTransform()
cc.Node:isCascadeOpacityEnabled()
cc.Node:setParent(cc.Node)
cc.Node:getName()
cc.Node:getNodeToParentTransform()
cc.Node:convertTouchToNodeSpaceAR(cc.Touch)
cc.Node:convertToNodeSpace(vec2_table)
cc.Node:resume()
cc.Node:getPhysicsBody()
cc.Node:setPosition(float,float)
cc.Node:stopActionByTag(int)
cc.Node:reorderChild(cc.Node,int)
cc.Node:ignoreAnchorPointForPosition(bool)
cc.Node:setSkewY(float)
cc.Node:setPositionZ(float)
cc.Node:3D(vec3_table)
cc.Node:setPositionX(float)
cc.Node:setNodeToParentTransform(mat4_table)
cc.Node:getAnchorPoint()
cc.Node:getNumberOfRunningActions()
cc.Node:updateTransform()
cc.Node:setGLProgram(cc.GLProgram)
cc.Node:isVisible()
cc.Node:getChildrenCount()
cc.Node:convertToNodeSpaceAR(vec2_table)
cc.Node:addComponent(cc.Component)
cc.Node:runAction(cc.Action)
cc.Node:isOpacityModifyRGB()
cc.Node:getRotation()
cc.Node:getAnchorPointInPoints()
cc.Node:visit(cc.Renderer,mat4_table,unsigned)
cc.Node:removeChildByName(string,bool)
cc.Node:getGLProgramState()
cc.Node:setScheduler(cc.Scheduler)
cc.Node:stopAllActions()
cc.Node:getSkewX()
cc.Node:getSkewY()
cc.Node:getDisplayedColor()
cc.Node:getActionByTag(int)
cc.Node:setName(string)
cc.Node:setAdditionalTransform(mat4_table)
cc.Node:getDisplayedOpacity()
cc.Node:getLocalZOrder()
cc.Node:getScheduler()
cc.Node:getParentToNodeAffineTransform()
cc.Node:getOrderOfArrival()
cc.Node:setActionManager(cc.ActionManager)
cc.Node:setColor(color3b_table)
cc.Node:isRunning()
cc.Node:getParent()
cc.Node:getPositionZ()
cc.Node:getPositionY()
cc.Node:getPositionX()
cc.Node:removeChildByTag(int,bool)
cc.Node:setPositionY(float)
cc.Node:getNodeToWorldAffineTransform()
cc.Node:updateDisplayedColor(color3b_table)
cc.Node:setVisible(bool)
cc.Node:getParentToNodeTransform()
cc.Node:setGlobalZOrder(float)
cc.Node:setScale(float,float)
cc.Node:getChildByTag(int)
cc.Node:setOrderOfArrival(int)
cc.Node:getScaleZ()
cc.Node:getScaleY()
cc.Node:getScaleX()
cc.Node:setLocalZOrder(int)
cc.Node:getWorldToNodeAffineTransform()
cc.Node:setCascadeColorEnabled(bool)
cc.Node:setOpacity(unsigned)
cc.Node:cleanup()
cc.Node:getComponent(string)
cc.Node:getContentSize()
cc.Node:getColor()
cc.Node:getBoundingBox()
cc.Node:setEventDispatcher(cc.EventDispatcher)
cc.Node:getGlobalZOrder()
cc.Node:draw(cc.Renderer,mat4_table,unsigned)
cc.Node:setUserObject(cc.Ref)
cc.Node:removeFromParentAndCleanup(bool)
cc.Node:update(float)
cc.Node:sortAllChildren()
cc.Node:getWorldToNodeTransform()
cc.Node:getScale()
cc.Node:getNormalizedPosition()
cc.Node:getRotationSkewX()
cc.Node:getRotationSkewY()
cc.Node:setTag(int)
cc.Node:isCascadeColorEnabled()
cc.Node:stopAction(cc.Action)
cc.Node:getActionManager()
cc.Node:create()
cc.NodeGrid
cc.NodeGrid:setTarget(cc.Node)
cc.NodeGrid:getGrid()
cc.NodeGrid:setGrid(cc.GridBase)
cc.NodeGrid:create()
cc.NodeGrid:visit(cc.Renderer,mat4_table,unsigned)
ccs.NodeReader
ccs.NodeReader:setJsonPath(string)
ccs.NodeReader:createNode(string)
ccs.NodeReader:loadNodeWithFile(string)
ccs.NodeReader:purge()
ccs.NodeReader:init()
ccs.NodeReader:loadNodeWithContent(string)
ccs.NodeReader:isRecordJsonPath()
ccs.NodeReader:getJsonPath()
ccs.NodeReader:setRecordJsonPath(bool)
ccs.NodeReader:destroyInstance()
ccs.NodeReader:NodeReader()
cc.OrbitCamera
cc.OrbitCamera:create(float,float,float,float,float,float,float)
cc.OrbitCamera:startWithTarget(cc.Node)
cc.OrbitCamera:clone()
cc.OrbitCamera:update(float)
cc.PageTurn
cc.PageTurn:create(float,size_table)
cc.PageTurn:clone()
cc.PageTurn:update(float)
ccui.PageView
ccui.PageView:getCurPageIndex()
ccui.PageView:addWidgetToPage(ccui.Widget,long,bool)
ccui.PageView:getPage(long)
ccui.PageView:removePage(ccui.Layout)
ccui.PageView:addEventListener(function)
ccui.PageView:insertPage(ccui.Layout,int)
ccui.PageView:scrollToPage(long)
ccui.PageView:removePageAtIndex(long)
ccui.PageView:getPages()
ccui.PageView:removeAllPages()
ccui.PageView:addPage(ccui.Layout)
ccui.PageView:create()
ccui.PageView:createInstance()
ccui.PageView:getLayoutType()
ccui.PageView:getDescription()
ccui.PageView:update(float)
ccui.PageView:setLayoutType(int)
ccui.PageView:PageView()
cc.ParallaxNode
cc.ParallaxNode:addChild(cc.Node,int,vec2_table,vec2_table)
cc.ParallaxNode:removeAllChildrenWithCleanup(bool)
cc.ParallaxNode:create()
cc.ParallaxNode:addChild(cc.Node,int,int)
cc.ParallaxNode:visit(cc.Renderer,mat4_table,unsigned)
cc.ParallaxNode:removeChild(cc.Node,bool)
cc.ParticleBatchNode
cc.ParticleBatchNode:setTexture(cc.Texture2D)
cc.ParticleBatchNode:disableParticle(int)
cc.ParticleBatchNode:getTexture()
cc.ParticleBatchNode:setTextureAtlas(cc.TextureAtlas)
cc.ParticleBatchNode:removeAllChildrenWithCleanup(bool)
cc.ParticleBatchNode:getTextureAtlas()
cc.ParticleBatchNode:insertChild(cc.ParticleSystem,int)
cc.ParticleBatchNode:removeChildAtIndex(int,bool)
cc.ParticleBatchNode:create(string,int)
cc.ParticleBatchNode:createWithTexture(cc.Texture2D,int)
cc.ParticleBatchNode:addChild(cc.Node,int,int)
cc.ParticleBatchNode:draw(cc.Renderer,mat4_table,unsigned)
cc.ParticleBatchNode:visit(cc.Renderer,mat4_table,unsigned)
cc.ParticleBatchNode:reorderChild(cc.Node,int)
cc.ParticleBatchNode:removeChild(cc.Node,bool)
ccs.ParticleDisplayData
ccs.ParticleDisplayData:create()
ccs.ParticleDisplayData:ParticleDisplayData()
cc.ParticleExplosion
cc.ParticleExplosion:create()
cc.ParticleExplosion:createWithTotalParticles(int)
cc.ParticleFire
cc.ParticleFire:create()
cc.ParticleFire:createWithTotalParticles(int)
cc.ParticleFireworks
cc.ParticleFireworks:create()
cc.ParticleFireworks:createWithTotalParticles(int)
cc.ParticleFlower
cc.ParticleFlower:create()
cc.ParticleFlower:createWithTotalParticles(int)
cc.ParticleGalaxy
cc.ParticleGalaxy:create()
cc.ParticleGalaxy:createWithTotalParticles(int)
cc.ParticleMeteor
cc.ParticleMeteor:create()
cc.ParticleMeteor:createWithTotalParticles(int)
cc.ParticleRain
cc.ParticleRain:create()
cc.ParticleRain:createWithTotalParticles(int)
cc.ParticleSmoke
cc.ParticleSmoke:create()
cc.ParticleSmoke:createWithTotalParticles(int)
cc.ParticleSnow
cc.ParticleSnow:create()
cc.ParticleSnow:createWithTotalParticles(int)
cc.ParticleSpiral
cc.ParticleSpiral:create()
cc.ParticleSpiral:createWithTotalParticles(int)
cc.ParticleSun
cc.ParticleSun:create()
cc.ParticleSun:createWithTotalParticles(int)
cc.ParticleSystem
cc.ParticleSystem:getStartSizeVar()
cc.ParticleSystem:getTexture()
cc.ParticleSystem:isFull()
cc.ParticleSystem:getBatchNode()
cc.ParticleSystem:getStartColor()
cc.ParticleSystem:getPositionType()
cc.ParticleSystem:setPosVar(vec2_table)
cc.ParticleSystem:getEndSpin()
cc.ParticleSystem:setRotatePerSecondVar(float)
cc.ParticleSystem:getStartSpinVar()
cc.ParticleSystem:getRadialAccelVar()
cc.ParticleSystem:getEndSizeVar()
cc.ParticleSystem:setRotation(float)
cc.ParticleSystem:setTangentialAccel(float)
cc.ParticleSystem:setScaleY(float)
cc.ParticleSystem:setScaleX(float)
cc.ParticleSystem:getRadialAccel()
cc.ParticleSystem:setStartRadius(float)
cc.ParticleSystem:setRotatePerSecond(float)
cc.ParticleSystem:setEndSize(float)
cc.ParticleSystem:getGravity()
cc.ParticleSystem:getTangentialAccel()
cc.ParticleSystem:setEndRadius(float)
cc.ParticleSystem:getSpeed()
cc.ParticleSystem:getAngle()
cc.ParticleSystem:setEndColor(color4f_table)
cc.ParticleSystem:setStartSpin(float)
cc.ParticleSystem:setDuration(float)
cc.ParticleSystem:setTexture(cc.Texture2D)
cc.ParticleSystem:getPosVar()
cc.ParticleSystem:updateWithNoTime()
cc.ParticleSystem:isBlendAdditive()
cc.ParticleSystem:getSpeedVar()
cc.ParticleSystem:setPositionType(int)
cc.ParticleSystem:stopSystem()
cc.ParticleSystem:getSourcePosition()
cc.ParticleSystem:setLifeVar(float)
cc.ParticleSystem:setTotalParticles(int)
cc.ParticleSystem:setEndColorVar(color4f_table)
cc.ParticleSystem:getAtlasIndex()
cc.ParticleSystem:getStartSize()
cc.ParticleSystem:setStartSpinVar(float)
cc.ParticleSystem:resetSystem()
cc.ParticleSystem:setAtlasIndex(int)
cc.ParticleSystem:setTangentialAccelVar(float)
cc.ParticleSystem:setEndRadiusVar(float)
cc.ParticleSystem:getEndRadius()
cc.ParticleSystem:isOpacityModifyRGB()
cc.ParticleSystem:isActive()
cc.ParticleSystem:setRadialAccelVar(float)
cc.ParticleSystem:setStartSize(float)
cc.ParticleSystem:setSpeed(float)
cc.ParticleSystem:getStartSpin()
cc.ParticleSystem:getRotatePerSecond()
cc.ParticleSystem:setEmitterMode(int)
cc.ParticleSystem:getDuration()
cc.ParticleSystem:setSourcePosition(vec2_table)
cc.ParticleSystem:getEndSpinVar()
cc.ParticleSystem:setBlendAdditive(bool)
cc.ParticleSystem:setLife(float)
cc.ParticleSystem:setAngleVar(float)
cc.ParticleSystem:setRotationIsDir(bool)
cc.ParticleSystem:setEndSizeVar(float)
cc.ParticleSystem:setAngle(float)
cc.ParticleSystem:setBatchNode(cc.ParticleBatchNode)
cc.ParticleSystem:getTangentialAccelVar()
cc.ParticleSystem:getEmitterMode()
cc.ParticleSystem:setEndSpinVar(float)
cc.ParticleSystem:getAngleVar()
cc.ParticleSystem:setStartColor(color4f_table)
cc.ParticleSystem:getRotatePerSecondVar()
cc.ParticleSystem:getEndSize()
cc.ParticleSystem:getLife()
cc.ParticleSystem:setSpeedVar(float)
cc.ParticleSystem:setAutoRemoveOnFinish(bool)
cc.ParticleSystem:setGravity(vec2_table)
cc.ParticleSystem:postStep()
cc.ParticleSystem:setEmissionRate(float)
cc.ParticleSystem:getEndColorVar()
cc.ParticleSystem:getRotationIsDir()
cc.ParticleSystem:setScale(float)
cc.ParticleSystem:getEmissionRate()
cc.ParticleSystem:getEndColor()
cc.ParticleSystem:getLifeVar()
cc.ParticleSystem:setStartSizeVar(float)
cc.ParticleSystem:setOpacityModifyRGB(bool)
cc.ParticleSystem:addParticle()
cc.ParticleSystem:getStartRadius()
cc.ParticleSystem:getParticleCount()
cc.ParticleSystem:getStartRadiusVar()
cc.ParticleSystem:setStartColorVar(color4f_table)
cc.ParticleSystem:setEndSpin(float)
cc.ParticleSystem:setRadialAccel(float)
cc.ParticleSystem:isAutoRemoveOnFinish()
cc.ParticleSystem:getTotalParticles()
cc.ParticleSystem:setStartRadiusVar(float)
cc.ParticleSystem:getEndRadiusVar()
cc.ParticleSystem:getStartColorVar()
cc.ParticleSystem:create(string)
cc.ParticleSystem:createWithTotalParticles(int)
cc.ParticleSystem:update(float)
cc.ParticleSystemQuad
cc.ParticleSystemQuad:setDisplayFrame(cc.SpriteFrame)
cc.ParticleSystemQuad:setTextureWithRect(cc.Texture2D,rect_table)
cc.ParticleSystemQuad:listenRendererRecreated(cc.EventCustom)
cc.ParticleSystemQuad:create(map_table)
cc.ParticleSystemQuad:createWithTotalParticles(int)
cc.ParticleSystemQuad:getDescription()
cc.PhysicsBody
cc.PhysicsBody:isGravityEnabled()
cc.PhysicsBody:resetForces()
cc.PhysicsBody:getVelocityLimit()
cc.PhysicsBody:setGroup(int)
cc.PhysicsBody:getMass()
cc.PhysicsBody:getCollisionBitmask()
cc.PhysicsBody:getRotationOffset()
cc.PhysicsBody:getRotation()
cc.PhysicsBody:getMoment()
cc.PhysicsBody:applyImpulse(vec2_table,vec2_table)
cc.PhysicsBody:setRotationOffset(float)
cc.PhysicsBody:applyForce(vec2_table,vec2_table)
cc.PhysicsBody:addShape(cc.PhysicsShape,bool)
cc.PhysicsBody:applyTorque(float)
cc.PhysicsBody:getAngularVelocityLimit()
cc.PhysicsBody:setAngularVelocityLimit(float)
cc.PhysicsBody:getVelocity()
cc.PhysicsBody:getLinearDamping()
cc.PhysicsBody:removeAllShapes()
cc.PhysicsBody:setAngularDamping(float)
cc.PhysicsBody:setVelocityLimit(float)
cc.PhysicsBody:setResting(bool)
cc.PhysicsBody:getPositionOffset()
cc.PhysicsBody:setCategoryBitmask(int)
cc.PhysicsBody:getWorld()
cc.PhysicsBody:getAngularVelocity()
cc.PhysicsBody:getPosition()
cc.PhysicsBody:setEnable(bool)
cc.PhysicsBody:setGravityEnable(bool)
cc.PhysicsBody:getGroup()
cc.PhysicsBody:setMoment(float)
cc.PhysicsBody:getTag()
cc.PhysicsBody:2World(vec2_table)
cc.PhysicsBody:getCategoryBitmask()
cc.PhysicsBody:setDynamic(bool)
cc.PhysicsBody:getFirstShape()
cc.PhysicsBody:getShapes()
cc.PhysicsBody:getContactTestBitmask()
cc.PhysicsBody:setAngularVelocity(float)
cc.PhysicsBody:2Local(vec2_table)
cc.PhysicsBody:isEnabled()
cc.PhysicsBody:removeShape(cc.PhysicsShape,bool)
cc.PhysicsBody:setMass(float)
cc.PhysicsBody:addMoment(float)
cc.PhysicsBody:setVelocity(vec2_table)
cc.PhysicsBody:setLinearDamping(float)
cc.PhysicsBody:setCollisionBitmask(int)
cc.PhysicsBody:setPositionOffset(vec2_table)
cc.PhysicsBody:setRotationEnable(bool)
cc.PhysicsBody:isRotationEnabled()
cc.PhysicsBody:getAngularDamping()
cc.PhysicsBody:getVelocityAtLocalPoint(vec2_table)
cc.PhysicsBody:isResting()
cc.PhysicsBody:addMass(float)
cc.PhysicsBody:getShape(int)
cc.PhysicsBody:setTag(int)
cc.PhysicsBody:getVelocityAtWorldPoint(vec2_table)
cc.PhysicsBody:setContactTestBitmask(int)
cc.PhysicsBody:removeFromWorld()
cc.PhysicsBody:isDynamic()
cc.PhysicsBody:getNode()
cc.PhysicsBody:createBox(size_table,cc.PhysicsMaterial,vec2_table)
cc.PhysicsBody:createEdgeSegment(vec2_table,vec2_table,cc.PhysicsMaterial,float)
cc.PhysicsBody:create(float,float)
cc.PhysicsBody:createEdgeBox(size_table,cc.PhysicsMaterial,float,vec2_table)
cc.PhysicsBody:createCircle(float,cc.PhysicsMaterial,vec2_table)
cc.PhysicsContact
cc.PhysicsContact:getContactData()
cc.PhysicsContact:getEventCode()
cc.PhysicsContact:getPreContactData()
cc.PhysicsContact:getShapeA()
cc.PhysicsContact:getShapeB()
cc.PhysicsContactPostSolve
cc.PhysicsContactPostSolve:getFriction()
cc.PhysicsContactPostSolve:getSurfaceVelocity()
cc.PhysicsContactPostSolve:getRestitution()
cc.PhysicsContactPreSolve
cc.PhysicsContactPreSolve:getFriction()
cc.PhysicsContactPreSolve:getRestitution()
cc.PhysicsContactPreSolve:setFriction(float)
cc.PhysicsContactPreSolve:ignore()
cc.PhysicsContactPreSolve:getSurfaceVelocity()
cc.PhysicsContactPreSolve:setSurfaceVelocity(vec2_table)
cc.PhysicsContactPreSolve:setRestitution(float)
cc.PhysicsDebugDraw
cc.PhysicsJoint
cc.PhysicsJoint:getBodyA()
cc.PhysicsJoint:getBodyB()
cc.PhysicsJoint:getMaxForce()
cc.PhysicsJoint:setMaxForce(float)
cc.PhysicsJoint:isEnabled()
cc.PhysicsJoint:setEnable(bool)
cc.PhysicsJoint:setCollisionEnable(bool)
cc.PhysicsJoint:getWorld()
cc.PhysicsJoint:setTag(int)
cc.PhysicsJoint:removeFormWorld()
cc.PhysicsJoint:isCollisionEnabled()
cc.PhysicsJoint:getTag()
cc.PhysicsJoint:destroy(cc.PhysicsJoint)
cc.PhysicsJointDistance
cc.PhysicsJointDistance:setDistance(float)
cc.PhysicsJointDistance:getDistance()
cc.PhysicsJointDistance:construct(cc.PhysicsBody,cc.PhysicsBody,vec2_table,vec2_table)
cc.PhysicsJointFixed
cc.PhysicsJointFixed:construct(cc.PhysicsBody,cc.PhysicsBody,vec2_table)
cc.PhysicsJointGear
cc.PhysicsJointGear:setRatio(float)
cc.PhysicsJointGear:getPhase()
cc.PhysicsJointGear:setPhase(float)
cc.PhysicsJointGear:getRatio()
cc.PhysicsJointGear:construct(cc.PhysicsBody,cc.PhysicsBody,float,float)
cc.PhysicsJointGroove
cc.PhysicsJointGroove:2(vec2_table)
cc.PhysicsJointGroove:setGrooveA(vec2_table)
cc.PhysicsJointGroove:setGrooveB(vec2_table)
cc.PhysicsJointGroove:getGrooveA()
cc.PhysicsJointGroove:getGrooveB()
cc.PhysicsJointGroove:2()
cc.PhysicsJointGroove:construct(cc.PhysicsBody,cc.PhysicsBody,vec2_table,vec2_table,vec2_table)
cc.PhysicsJointLimit
cc.PhysicsJointLimit:2(vec2_table)
cc.PhysicsJointLimit:1(vec2_table)
cc.PhysicsJointLimit:setMax(float)
cc.PhysicsJointLimit:2()
cc.PhysicsJointLimit:1()
cc.PhysicsJointLimit:getMin()
cc.PhysicsJointLimit:getMax()
cc.PhysicsJointLimit:setMin(float)
cc.PhysicsJointLimit:construct(cc.PhysicsBody,cc.PhysicsBody,vec2_table,vec2_table,float,float)
cc.PhysicsJointMotor
cc.PhysicsJointMotor:setRate(float)
cc.PhysicsJointMotor:getRate()
cc.PhysicsJointMotor:construct(cc.PhysicsBody,cc.PhysicsBody,float)
cc.PhysicsJointPin
cc.PhysicsJointPin:construct(cc.PhysicsBody,cc.PhysicsBody,vec2_table)
cc.PhysicsJointRatchet
cc.PhysicsJointRatchet:getAngle()
cc.PhysicsJointRatchet:setAngle(float)
cc.PhysicsJointRatchet:setPhase(float)
cc.PhysicsJointRatchet:getPhase()
cc.PhysicsJointRatchet:setRatchet(float)
cc.PhysicsJointRatchet:getRatchet()
cc.PhysicsJointRatchet:construct(cc.PhysicsBody,cc.PhysicsBody,float,float)
cc.PhysicsJointRotaryLimit
cc.PhysicsJointRotaryLimit:getMax()
cc.PhysicsJointRotaryLimit:setMin(float)
cc.PhysicsJointRotaryLimit:setMax(float)
cc.PhysicsJointRotaryLimit:getMin()
cc.PhysicsJointRotaryLimit:construct(cc.PhysicsBody,cc.PhysicsBody,float,float)
cc.PhysicsJointRotarySpring
cc.PhysicsJointRotarySpring:getDamping()
cc.PhysicsJointRotarySpring:setRestAngle(float)
cc.PhysicsJointRotarySpring:getStiffness()
cc.PhysicsJointRotarySpring:setStiffness(float)
cc.PhysicsJointRotarySpring:setDamping(float)
cc.PhysicsJointRotarySpring:getRestAngle()
cc.PhysicsJointRotarySpring:construct(cc.PhysicsBody,cc.PhysicsBody,float,float)
cc.PhysicsJointSpring
cc.PhysicsJointSpring:2(vec2_table)
cc.PhysicsJointSpring:1(vec2_table)
cc.PhysicsJointSpring:getDamping()
cc.PhysicsJointSpring:setStiffness(float)
cc.PhysicsJointSpring:getRestLength()
cc.PhysicsJointSpring:2()
cc.PhysicsJointSpring:1()
cc.PhysicsJointSpring:getStiffness()
cc.PhysicsJointSpring:setRestLength(float)
cc.PhysicsJointSpring:setDamping(float)
cc.PhysicsJointSpring:construct(cc.PhysicsBody,cc.PhysicsBody,vec2_table,vec2_table,float,float)
cc.PhysicsShape
cc.PhysicsShape:getFriction()
cc.PhysicsShape:setGroup(int)
cc.PhysicsShape:setDensity(float)
cc.PhysicsShape:getMass()
cc.PhysicsShape:getMaterial()
cc.PhysicsShape:getCollisionBitmask()
cc.PhysicsShape:getArea()
cc.PhysicsShape:setCategoryBitmask(int)
cc.PhysicsShape:getGroup()
cc.PhysicsShape:setMoment(float)
cc.PhysicsShape:containsPoint(vec2_table)
cc.PhysicsShape:getCategoryBitmask()
cc.PhysicsShape:getType()
cc.PhysicsShape:getContactTestBitmask()
cc.PhysicsShape:getCenter()
cc.PhysicsShape:getDensity()
cc.PhysicsShape:setMass(float)
cc.PhysicsShape:getTag()
cc.PhysicsShape:calculateDefaultMoment()
cc.PhysicsShape:setCollisionBitmask(int)
cc.PhysicsShape:getMoment()
cc.PhysicsShape:getOffset()
cc.PhysicsShape:getRestitution()
cc.PhysicsShape:setFriction(float)
cc.PhysicsShape:setMaterial(cc.PhysicsMaterial)
cc.PhysicsShape:setTag(int)
cc.PhysicsShape:setContactTestBitmask(int)
cc.PhysicsShape:setRestitution(float)
cc.PhysicsShape:getBody()
cc.PhysicsShapeBox
cc.PhysicsShapeBox:getSize()
cc.PhysicsShapeBox:create(size_table,cc.PhysicsMaterial,vec2_table)
cc.PhysicsShapeBox:getOffset()
cc.PhysicsShapeCircle
cc.PhysicsShapeCircle:getRadius()
cc.PhysicsShapeCircle:create(float,cc.PhysicsMaterial,vec2_table)
cc.PhysicsShapeCircle:calculateArea(float)
cc.PhysicsShapeCircle:calculateMoment(float,float,vec2_table)
cc.PhysicsShapeCircle:getOffset()
cc.PhysicsShapeCircle:calculateDefaultMoment()
cc.PhysicsShapeEdgeBox
cc.PhysicsShapeEdgeBox:create(size_table,cc.PhysicsMaterial,float,vec2_table)
cc.PhysicsShapeEdgeBox:getOffset()
cc.PhysicsShapeEdgeChain
cc.PhysicsShapeEdgeChain:getPointsCount()
cc.PhysicsShapeEdgeChain:getCenter()
cc.PhysicsShapeEdgePolygon
cc.PhysicsShapeEdgePolygon:getPointsCount()
cc.PhysicsShapeEdgePolygon:getCenter()
cc.PhysicsShapeEdgeSegment
cc.PhysicsShapeEdgeSegment:getPointB()
cc.PhysicsShapeEdgeSegment:getPointA()
cc.PhysicsShapeEdgeSegment:create(vec2_table,vec2_table,cc.PhysicsMaterial,float)
cc.PhysicsShapeEdgeSegment:getCenter()
cc.PhysicsShapePolygon
cc.PhysicsShapePolygon:getPointsCount()
cc.PhysicsShapePolygon:getPoint(int)
cc.PhysicsShapePolygon:calculateDefaultMoment()
cc.PhysicsShapePolygon:getCenter()
cc.PhysicsWorld
cc.PhysicsWorld:getGravity()
cc.PhysicsWorld:getAllBodies()
cc.PhysicsWorld:setGravity(vec2_table)
cc.PhysicsWorld:getSpeed()
cc.PhysicsWorld:removeBody(cc.PhysicsBody)
cc.PhysicsWorld:removeJoint(cc.PhysicsJoint,bool)
cc.PhysicsWorld:getUpdateRate()
cc.PhysicsWorld:setSpeed(float)
cc.PhysicsWorld:getShapes(vec2_table)
cc.PhysicsWorld:removeAllJoints()
cc.PhysicsWorld:getShape(vec2_table)
cc.PhysicsWorld:removeAllBodies()
cc.PhysicsWorld:getDebugDrawMask()
cc.PhysicsWorld:setDebugDrawMask(int)
cc.PhysicsWorld:getBody(int)
cc.PhysicsWorld:setUpdateRate(int)
cc.PhysicsWorld:addJoint(cc.PhysicsJoint)
cc.Place
cc.Place:create(vec2_table)
cc.Place:clone()
cc.Place:update(float)
cc.Place:reverse()
ccs.PositionFrame
ccs.PositionFrame:getX()
ccs.PositionFrame:getY()
ccs.PositionFrame:setPosition(vec2_table)
ccs.PositionFrame:setX(float)
ccs.PositionFrame:setY(float)
ccs.PositionFrame:getPosition()
ccs.PositionFrame:create()
ccs.PositionFrame:apply(float)
ccs.PositionFrame:clone()
ccs.PositionFrame:PositionFrame()
cc.ProgressFromTo
cc.ProgressFromTo:create(float,float,float)
cc.ProgressFromTo:startWithTarget(cc.Node)
cc.ProgressFromTo:clone()
cc.ProgressFromTo:reverse()
cc.ProgressFromTo:update(float)
cc.ProgressTimer
cc.ProgressTimer:isReverseDirection()
cc.ProgressTimer:setBarChangeRate(vec2_table)
cc.ProgressTimer:getPercentage()
cc.ProgressTimer:setSprite(cc.Sprite)
cc.ProgressTimer:getType()
cc.ProgressTimer:getSprite()
cc.ProgressTimer:setMidpoint(vec2_table)
cc.ProgressTimer:getBarChangeRate()
cc.ProgressTimer:setReverseDirection(bool)
cc.ProgressTimer:getMidpoint()
cc.ProgressTimer:setPercentage(float)
cc.ProgressTimer:setType(int)
cc.ProgressTimer:create(cc.Sprite)
cc.ProgressTimer:setAnchorPoint(vec2_table)
cc.ProgressTimer:draw(cc.Renderer,mat4_table,unsigned)
cc.ProgressTimer:setColor(color3b_table)
cc.ProgressTimer:getColor()
cc.ProgressTimer:setOpacity(unsigned)
cc.ProgressTimer:getOpacity()
cc.ProgressTo
cc.ProgressTo:create(float,float)
cc.ProgressTo:startWithTarget(cc.Node)
cc.ProgressTo:clone()
cc.ProgressTo:reverse()
cc.ProgressTo:update(float)
cc.ProtectedNode
cc.ProtectedNode:addProtectedChild(cc.Node,int,int)
cc.ProtectedNode:disableCascadeColor()
cc.ProtectedNode:removeProtectedChildByTag(int,bool)
cc.ProtectedNode:reorderProtectedChild(cc.Node,int)
cc.ProtectedNode:removeAllProtectedChildrenWithCleanup(bool)
cc.ProtectedNode:sortAllProtectedChildren()
cc.ProtectedNode:getProtectedChildByTag(int)
cc.ProtectedNode:removeProtectedChild(cc.Node,bool)
cc.ProtectedNode:removeAllProtectedChildren()
cc.ProtectedNode:create()
cc.ProtectedNode:visit(cc.Renderer,mat4_table,unsigned)
cc.ProtectedNode:updateDisplayedOpacity(unsigned)
cc.ProtectedNode:updateDisplayedColor(color3b_table)
cc.ProtectedNode:cleanup()
cc.Ref
cc.Ref:release()
cc.Ref:retain()
cc.Ref:getReferenceCount()
ccui.RelativeBox
ccui.RelativeBox:create(size_table)
ccui.RelativeBox:RelativeBox()
ccui.RelativeLayoutParameter
ccui.RelativeLayoutParameter:setAlign(int)
ccui.RelativeLayoutParameter:setRelativeToWidgetName(string)
ccui.RelativeLayoutParameter:getRelativeName()
ccui.RelativeLayoutParameter:getRelativeToWidgetName()
ccui.RelativeLayoutParameter:setRelativeName(string)
ccui.RelativeLayoutParameter:getAlign()
ccui.RelativeLayoutParameter:create()
ccui.RelativeLayoutParameter:createCloneInstance()
ccui.RelativeLayoutParameter:copyProperties(ccui.LayoutParameter)
ccui.RelativeLayoutParameter:RelativeLayoutParameter()
cc.RemoveSelf
cc.RemoveSelf:create()
cc.RemoveSelf:clone()
cc.RemoveSelf:update(float)
cc.RemoveSelf:reverse()
cc.RenderTexture
cc.RenderTexture:setVirtualViewport(vec2_table,rect_table,rect_table)
cc.RenderTexture:clearStencil(int)
cc.RenderTexture:getClearDepth()
cc.RenderTexture:getClearStencil()
cc.RenderTexture:end()
cc.RenderTexture:setClearStencil(int)
cc.RenderTexture:setSprite(cc.Sprite)
cc.RenderTexture:getSprite()
cc.RenderTexture:isAutoDraw()
cc.RenderTexture:setKeepMatrix(bool)
cc.RenderTexture:setClearFlags(unsigned)
cc.RenderTexture:begin()
cc.RenderTexture:saveToFile(string,int,bool)
cc.RenderTexture:setAutoDraw(bool)
cc.RenderTexture:setClearColor(color4f_table)
cc.RenderTexture:endToLua()
cc.RenderTexture:beginWithClear(float,float,float,float,float,int)
cc.RenderTexture:clearDepth(float)
cc.RenderTexture:getClearColor()
cc.RenderTexture:clear(float,float,float,float)
cc.RenderTexture:getClearFlags()
cc.RenderTexture:newImage()
cc.RenderTexture:setClearDepth(float)
cc.RenderTexture:initWithWidthAndHeight(int,int,int,unsigned)
cc.RenderTexture:create(int,int,int,unsigned)
cc.RenderTexture:draw(cc.Renderer,mat4_table,unsigned)
cc.RenderTexture:visit(cc.Renderer,mat4_table,unsigned)
cc.RenderTexture:RenderTexture()
cc.Repeat
cc.Repeat:setInnerAction(cc.FiniteTimeAction)
cc.Repeat:getInnerAction()
cc.Repeat:create(cc.FiniteTimeAction,unsigned)
cc.Repeat:startWithTarget(cc.Node)
cc.Repeat:reverse()
cc.Repeat:clone()
cc.Repeat:stop()
cc.Repeat:update(float)
cc.Repeat:isDone()
cc.RepeatForever
cc.RepeatForever:setInnerAction(cc.ActionInterval)
cc.RepeatForever:getInnerAction()
cc.RepeatForever:create(cc.ActionInterval)
cc.RepeatForever:startWithTarget(cc.Node)
cc.RepeatForever:clone()
cc.RepeatForever:isDone()
cc.RepeatForever:reverse()
cc.RepeatForever:step(float)
cc.ReuseGrid
cc.ReuseGrid:create(int)
cc.ReuseGrid:startWithTarget(cc.Node)
cc.ReuseGrid:clone()
cc.ReuseGrid:reverse()
ccui.RichElement
ccui.RichElement:init(int,color3b_table,unsigned)
ccui.RichElement:RichElement()
ccui.RichElementCustomNode
ccui.RichElementCustomNode:init(int,color3b_table,unsigned,cc.Node)
ccui.RichElementCustomNode:create(int,color3b_table,unsigned,cc.Node)
ccui.RichElementCustomNode:RichElementCustomNode()
ccui.RichElementImage
ccui.RichElementImage:init(int,color3b_table,unsigned,string)
ccui.RichElementImage:create(int,color3b_table,unsigned,string)
ccui.RichElementImage:RichElementImage()
ccui.RichElementText
ccui.RichElementText:init(int,color3b_table,unsigned,string,string,float)
ccui.RichElementText:create(int,color3b_table,unsigned,string,string,float)
ccui.RichElementText:RichElementText()
ccui.RichText
ccui.RichText:insertElement(ccui.RichElement,int)
ccui.RichText:setAnchorPoint(vec2_table)
ccui.RichText:pushBackElement(ccui.RichElement)
ccui.RichText:ignoreContentAdaptWithSize(bool)
ccui.RichText:setVerticalSpace(float)
ccui.RichText:formatText()
ccui.RichText:removeElement(int)
ccui.RichText:create()
ccui.RichText:getDescription()
ccui.RichText:getVirtualRendererSize()
ccui.RichText:RichText()
cc.Ripple
cc.Ripple:setAmplitudeRate(float)
cc.Ripple:getAmplitudeRate()
cc.Ripple:setAmplitude(float)
cc.Ripple:getAmplitude()
cc.Ripple:setPosition(vec2_table)
cc.Ripple:getPosition()
cc.Ripple:create(float,size_table,vec2_table,float,unsigned,float)
cc.Ripple:clone()
cc.Ripple:update(float)
cc.RotateBy
cc.RotateBy:create(float,float,float)
cc.RotateBy:startWithTarget(cc.Node)
cc.RotateBy:clone()
cc.RotateBy:reverse()
cc.RotateBy:update(float)
cc.RotateTo
cc.RotateTo:create(float,float,float)
cc.RotateTo:startWithTarget(cc.Node)
cc.RotateTo:clone()
cc.RotateTo:reverse()
cc.RotateTo:update(float)
ccs.RotationFrame
ccs.RotationFrame:setRotation(float)
ccs.RotationFrame:getRotation()
ccs.RotationFrame:create()
ccs.RotationFrame:apply(float)
ccs.RotationFrame:clone()
ccs.RotationFrame:RotationFrame()
ccs.RotationSkewFrame
ccs.RotationSkewFrame:create()
ccs.RotationSkewFrame:apply(float)
ccs.RotationSkewFrame:clone()
ccs.RotationSkewFrame:RotationSkewFrame()
cc.Scale
cc.Scale:resizableSpriteWithCapInsets(rect_table)
cc.Scale:setInsetBottom(float)
cc.Scale:initWithSpriteFrameName(string,rect_table)
cc.Scale:setInsetTop(float)
cc.Scale:init()
cc.Scale:setPreferredSize(size_table)
cc.Scale:setSpriteFrame(cc.SpriteFrame)
cc.Scale:initWithBatchNode(cc.SpriteBatchNode,rect_table,bool,rect_table)
cc.Scale:getInsetBottom()
cc.Scale:getCapInsets()
cc.Scale:updateWithBatchNode(cc.SpriteBatchNode,rect_table,bool,rect_table)
cc.Scale:getInsetRight()
cc.Scale:getOriginalSize()
cc.Scale:initWithFile(string,rect_table,rect_table)
cc.Scale:getInsetTop()
cc.Scale:setInsetLeft(float)
cc.Scale:initWithSpriteFrame(cc.SpriteFrame,rect_table)
cc.Scale:getPreferredSize()
cc.Scale:setCapInsets(rect_table)
cc.Scale:getInsetLeft()
cc.Scale:setInsetRight(float)
cc.Scale:create(string,rect_table,rect_table)
cc.Scale:createWithSpriteFrameName(string,rect_table)
cc.Scale:createWithSpriteFrame(cc.SpriteFrame,rect_table)
cc.Scale:isOpacityModifyRGB()
cc.Scale:setColor(color3b_table)
cc.Scale:setOpacityModifyRGB(bool)
cc.Scale:setOpacity(unsigned)
cc.Scale:updateDisplayedOpacity(unsigned)
cc.Scale:updateDisplayedColor(color3b_table)
cc.Scale:setContentSize(size_table)
cc.Scale:9Sprite()
cc.ScaleBy
cc.ScaleBy:create(float,float,float,float)
cc.ScaleBy:startWithTarget(cc.Node)
cc.ScaleBy:clone()
cc.ScaleBy:reverse()
ccs.ScaleFrame
ccs.ScaleFrame:setScaleY(float)
ccs.ScaleFrame:setScaleX(float)
ccs.ScaleFrame:getScaleY()
ccs.ScaleFrame:getScaleX()
ccs.ScaleFrame:setScale(float)
ccs.ScaleFrame:create()
ccs.ScaleFrame:apply(float)
ccs.ScaleFrame:clone()
ccs.ScaleFrame:ScaleFrame()
cc.ScaleTo
cc.ScaleTo:create(float,float,float,float)
cc.ScaleTo:startWithTarget(cc.Node)
cc.ScaleTo:clone()
cc.ScaleTo:reverse()
cc.ScaleTo:update(float)
cc.Scene
cc.Scene:getPhysicsWorld()
cc.Scene:createWithSize(size_table)
cc.Scene:create()
cc.Scene:createWithPhysics()
cc.Scene:getDescription()
cc.Scene:getScene()
cc.Scene:update(float)
cc.Scene:addChild(cc.Node,int,int)
ccs.SceneReader
ccs.SceneReader:setTarget(function)
ccs.SceneReader:createNodeWithSceneFile(string,int)
ccs.SceneReader:getAttachComponentType()
ccs.SceneReader:getNodeByTag(int)
ccs.SceneReader:destroyInstance()
ccs.SceneReader:sceneReaderVersion()
ccs.SceneReader:getInstance()
cc.Scheduler
cc.Scheduler:setTimeScale(float)
cc.Scheduler:getTimeScale()
cc.Scheduler:Scheduler()
ccui.ScrollView
ccui.ScrollView:scrollToTop(float,bool)
ccui.ScrollView:scrollToPercentHorizontal(float,float,bool)
ccui.ScrollView:isInertiaScrollEnabled()
ccui.ScrollView:scrollToPercentBothDirection(vec2_table,float,bool)
ccui.ScrollView:getDirection()
ccui.ScrollView:scrollToBottomLeft(float,bool)
ccui.ScrollView:getInnerContainer()
ccui.ScrollView:jumpToBottom()
ccui.ScrollView:setDirection(int)
ccui.ScrollView:scrollToTopLeft(float,bool)
ccui.ScrollView:jumpToTopRight()
ccui.ScrollView:jumpToBottomLeft()
ccui.ScrollView:setInnerContainerSize(size_table)
ccui.ScrollView:getInnerContainerSize()
ccui.ScrollView:isBounceEnabled()
ccui.ScrollView:jumpToPercentVertical(float)
ccui.ScrollView:addEventListener(function)
ccui.ScrollView:setInertiaScrollEnabled(bool)
ccui.ScrollView:jumpToTopLeft()
ccui.ScrollView:jumpToPercentHorizontal(float)
ccui.ScrollView:jumpToBottomRight()
ccui.ScrollView:setBounceEnabled(bool)
ccui.ScrollView:jumpToTop()
ccui.ScrollView:scrollToLeft(float,bool)
ccui.ScrollView:jumpToPercentBothDirection(vec2_table)
ccui.ScrollView:scrollToPercentVertical(float,float,bool)
ccui.ScrollView:scrollToBottom(float,bool)
ccui.ScrollView:scrollToBottomRight(float,bool)
ccui.ScrollView:jumpToLeft()
ccui.ScrollView:scrollToRight(float,bool)
ccui.ScrollView:jumpToRight()
ccui.ScrollView:scrollToTopRight(float,bool)
ccui.ScrollView:create()
ccui.ScrollView:createInstance()
ccui.ScrollView:addChild(cc.Node,int,string)
ccui.ScrollView:getChildByName(string)
ccui.ScrollView:getDescription()
ccui.ScrollView:update(float)
ccui.ScrollView:getLayoutType()
ccui.ScrollView:removeAllChildrenWithCleanup(bool)
ccui.ScrollView:removeAllChildren()
ccui.ScrollView:findNextFocusedWidget(int,ccui.Widget)
ccui.ScrollView:removeChild(cc.Node,bool)
ccui.ScrollView:getChildren()
ccui.ScrollView:getChildByTag(int)
ccui.ScrollView:getChildrenCount()
ccui.ScrollView:setLayoutType(int)
ccui.ScrollView:ScrollView()
cc.Sequence
cc.Sequence:startWithTarget(cc.Node)
cc.Sequence:clone()
cc.Sequence:stop()
cc.Sequence:reverse()
cc.Sequence:update(float)
cc.Shaky
cc.Shaky:create(float,size_table,int,bool)
cc.Shaky:clone()
cc.Shaky:update(float)
cc.ShakyTiles
cc.ShakyTiles:create(float,size_table,int,bool)
cc.ShakyTiles:clone()
cc.ShakyTiles:update(float)
cc.ShatteredTiles
cc.ShatteredTiles:create(float,size_table,int,bool)
cc.ShatteredTiles:clone()
cc.ShatteredTiles:update(float)
cc.Show
cc.Show:create()
cc.Show:clone()
cc.Show:update(float)
cc.Show:reverse()
cc.ShuffleTiles
cc.ShuffleTiles:getDelta(size_table)
cc.ShuffleTiles:create(float,size_table,unsigned)
cc.ShuffleTiles:startWithTarget(cc.Node)
cc.ShuffleTiles:clone()
cc.ShuffleTiles:update(float)
cc.SimpleAudioEngine
cc.SimpleAudioEngine:preloadBackgroundMusic(char)
cc.SimpleAudioEngine:stopBackgroundMusic()
cc.SimpleAudioEngine:stopAllEffects()
cc.SimpleAudioEngine:getBackgroundMusicVolume()
cc.SimpleAudioEngine:resumeBackgroundMusic()
cc.SimpleAudioEngine:setBackgroundMusicVolume(float)
cc.SimpleAudioEngine:preloadEffect(char)
cc.SimpleAudioEngine:isBackgroundMusicPlaying()
cc.SimpleAudioEngine:getEffectsVolume()
cc.SimpleAudioEngine:willPlayBackgroundMusic()
cc.SimpleAudioEngine:pauseEffect(unsigned)
cc.SimpleAudioEngine:playEffect(char,bool,float,float,float)
cc.SimpleAudioEngine:rewindBackgroundMusic()
cc.SimpleAudioEngine:playBackgroundMusic(char,bool)
cc.SimpleAudioEngine:resumeAllEffects()
cc.SimpleAudioEngine:setEffectsVolume(float)
cc.SimpleAudioEngine:stopEffect(unsigned)
cc.SimpleAudioEngine:pauseBackgroundMusic()
cc.SimpleAudioEngine:pauseAllEffects()
cc.SimpleAudioEngine:unloadEffect(char)
cc.SimpleAudioEngine:resumeEffect(unsigned)
cc.SimpleAudioEngine:end()
cc.SimpleAudioEngine:getInstance()
sp.Skeleton
sp.Skeleton:setToSetupPose()
sp.Skeleton:setBlendFunc(cc.BlendFunc)
sp.Skeleton:onDraw(mat4_table,unsigned)
sp.Skeleton:setSlotsToSetupPose()
sp.Skeleton:getBlendFunc()
sp.Skeleton:setSkin(char)
sp.Skeleton:setBonesToSetupPose()
sp.Skeleton:getBoundingBox()
sp.Skeleton:onEnter()
sp.Skeleton:onExit()
sp.SkeletonAnimation
sp.SkeletonAnimation:setMix(char,char,float)
sp.SkeletonAnimation:clearTracks()
sp.SkeletonAnimation:clearTrack()
cc.SkewBy
cc.SkewBy:create(float,float,float)
cc.SkewBy:startWithTarget(cc.Node)
cc.SkewBy:clone()
cc.SkewBy:reverse()
ccs.SkewFrame
ccs.SkewFrame:getSkewY()
ccs.SkewFrame:setSkewX(float)
ccs.SkewFrame:setSkewY(float)
ccs.SkewFrame:getSkewX()
ccs.SkewFrame:create()
ccs.SkewFrame:apply(float)
ccs.SkewFrame:clone()
ccs.SkewFrame:SkewFrame()
cc.SkewTo
cc.SkewTo:create(float,float,float)
cc.SkewTo:startWithTarget(cc.Node)
cc.SkewTo:clone()
cc.SkewTo:reverse()
cc.SkewTo:update(float)
ccs.Skin
ccs.Skin:getBone()
ccs.Skin:getNodeToWorldTransformAR()
ccs.Skin:initWithFile(string)
ccs.Skin:getDisplayName()
ccs.Skin:updateArmatureTransform()
ccs.Skin:initWithSpriteFrameName(string)
ccs.Skin:setBone(ccs.Bone)
ccs.Skin:create(string)
ccs.Skin:createWithSpriteFrameName(string)
ccs.Skin:updateTransform()
ccs.Skin:getNodeToWorldTransform()
ccs.Skin:draw(cc.Renderer,mat4_table,unsigned)
ccs.Skin:Skin()
ccui.Slider
ccui.Slider:setPercent(int)
ccui.Slider:loadSlidBallTextureDisabled(string,int)
ccui.Slider:loadSlidBallTextureNormal(string,int)
ccui.Slider:loadBarTexture(string,int)
ccui.Slider:loadProgressBarTexture(string,int)
ccui.Slider:loadSlidBallTextures(string,string,string,int)
ccui.Slider:setCapInsetProgressBarRebderer(rect_table)
ccui.Slider:setCapInsetsBarRenderer(rect_table)
ccui.Slider:getCapInsetsProgressBarRebderer()
ccui.Slider:9Enabled(bool)
ccui.Slider:setCapInsets(rect_table)
ccui.Slider:addEventListener(function)
ccui.Slider:loadSlidBallTexturePressed(string,int)
ccui.Slider:9Enabled()
ccui.Slider:getCapInsetsBarRenderer()
ccui.Slider:getPercent()
ccui.Slider:create()
ccui.Slider:createInstance()
ccui.Slider:getVirtualRenderer()
ccui.Slider:ignoreContentAdaptWithSize(bool)
ccui.Slider:getDescription()
ccui.Slider:hitTest(vec2_table)
ccui.Slider:getVirtualRendererSize()
ccui.Slider:Slider()
cc.Spawn
cc.Spawn:startWithTarget(cc.Node)
cc.Spawn:clone()
cc.Spawn:stop()
cc.Spawn:reverse()
cc.Spawn:update(float)
cc.Speed
cc.Speed:setInnerAction(cc.ActionInterval)
cc.Speed:setSpeed(float)
cc.Speed:getInnerAction()
cc.Speed:getSpeed()
cc.Speed:create(cc.ActionInterval,float)
cc.Speed:startWithTarget(cc.Node)
cc.Speed:reverse()
cc.Speed:clone()
cc.Speed:stop()
cc.Speed:step(float)
cc.Speed:isDone()
cc.SplitCols
cc.SplitCols:create(float,unsigned)
cc.SplitCols:startWithTarget(cc.Node)
cc.SplitCols:clone()
cc.SplitCols:update(float)
cc.SplitRows
cc.SplitRows:create(float,unsigned)
cc.SplitRows:startWithTarget(cc.Node)
cc.SplitRows:clone()
cc.SplitRows:update(float)
cc.Sprite
cc.Sprite:setSpriteFrame(string)
cc.Sprite:setTexture(string)
cc.Sprite:getTexture()
cc.Sprite:setFlippedY(bool)
cc.Sprite:setFlippedX(bool)
cc.Sprite:getBatchNode()
cc.Sprite:getOffsetPosition()
cc.Sprite:removeAllChildrenWithCleanup(bool)
cc.Sprite:updateTransform()
cc.Sprite:setTextureRect(rect_table,bool,size_table)
cc.Sprite:isFrameDisplayed(cc.SpriteFrame)
cc.Sprite:getAtlasIndex()
cc.Sprite:setBatchNode(cc.SpriteBatchNode)
cc.Sprite:setDisplayFrameWithAnimationName(string,long)
cc.Sprite:setTextureAtlas(cc.TextureAtlas)
cc.Sprite:getSpriteFrame()
cc.Sprite:isDirty()
cc.Sprite:setAtlasIndex(long)
cc.Sprite:setDirty(bool)
cc.Sprite:isTextureRectRotated()
cc.Sprite:getTextureRect()
cc.Sprite:getTextureAtlas()
cc.Sprite:isFlippedX()
cc.Sprite:isFlippedY()
cc.Sprite:setVertexRect(rect_table)
cc.Sprite:create(string,rect_table)
cc.Sprite:createWithTexture(cc.Texture2D,rect_table,bool)
cc.Sprite:createWithSpriteFrameName(string)
cc.Sprite:createWithSpriteFrame(cc.SpriteFrame)
cc.Sprite:draw(cc.Renderer,mat4_table,unsigned)
cc.Sprite:addChild(cc.Node,int,int)
cc.Sprite:setScaleY(float)
cc.Sprite:setScaleX(float)
cc.Sprite:isOpacityModifyRGB()
cc.Sprite:setPositionZ(float)
cc.Sprite:setAnchorPoint(vec2_table)
cc.Sprite:setRotationSkewX(float)
cc.Sprite:getDescription()
cc.Sprite:setRotationSkewY(float)
cc.Sprite:setScale(float,float)
cc.Sprite:reorderChild(cc.Node,int)
cc.Sprite:removeChild(cc.Node,bool)
cc.Sprite:sortAllChildren()
cc.Sprite:setOpacityModifyRGB(bool)
cc.Sprite:setRotation(float)
cc.Sprite:setSkewY(float)
cc.Sprite:setVisible(bool)
cc.Sprite:setSkewX(float)
cc.Sprite:ignoreAnchorPointForPosition(bool)
cc.Sprite:getMesh()
cc.Sprite:getBlendFunc()
cc.Sprite:setBlendFunc(cc.BlendFunc)
cc.Sprite:create(string,string)
cc.SpriteBatchNode
cc.SpriteBatchNode:appendChild(cc.Sprite)
cc.SpriteBatchNode:addSpriteWithoutQuad(cc.Sprite,int,int)
cc.SpriteBatchNode:reorderBatch(bool)
cc.SpriteBatchNode:removeAllChildrenWithCleanup(bool)
cc.SpriteBatchNode:lowestAtlasIndexInChild(cc.Sprite)
cc.SpriteBatchNode:atlasIndexForChild(cc.Sprite,int)
cc.SpriteBatchNode:setTextureAtlas(cc.TextureAtlas)
cc.SpriteBatchNode:getTexture()
cc.SpriteBatchNode:increaseAtlasCapacity()
cc.SpriteBatchNode:getTextureAtlas()
cc.SpriteBatchNode:insertQuadFromSprite(cc.Sprite,long)
cc.SpriteBatchNode:setTexture(cc.Texture2D)
cc.SpriteBatchNode:rebuildIndexInOrder(cc.Sprite,long)
cc.SpriteBatchNode:highestAtlasIndexInChild(cc.Sprite)
cc.SpriteBatchNode:removeChildAtIndex(long,bool)
cc.SpriteBatchNode:removeSpriteFromAtlas(cc.Sprite)
cc.SpriteBatchNode:create(string,long)
cc.SpriteBatchNode:createWithTexture(cc.Texture2D,long)
cc.SpriteBatchNode:addChild(cc.Node,int,int)
cc.SpriteBatchNode:draw(cc.Renderer,mat4_table,unsigned)
cc.SpriteBatchNode:getDescription()
cc.SpriteBatchNode:visit(cc.Renderer,mat4_table,unsigned)
cc.SpriteBatchNode:sortAllChildren()
cc.SpriteBatchNode:removeChild(cc.Node,bool)
cc.SpriteBatchNode:reorderChild(cc.Node,int)
ccs.SpriteDisplayData
ccs.SpriteDisplayData:copy(ccs.DisplayData)
ccs.SpriteDisplayData:create()
ccs.SpriteDisplayData:SpriteDisplayData()
cc.SpriteFrame
cc.SpriteFrame:clone()
cc.SpriteFrame:setRotated(bool)
cc.SpriteFrame:setTexture(cc.Texture2D)
cc.SpriteFrame:getOffset()
cc.SpriteFrame:setRectInPixels(rect_table)
cc.SpriteFrame:getTexture()
cc.SpriteFrame:getRect()
cc.SpriteFrame:setOffsetInPixels(vec2_table)
cc.SpriteFrame:getRectInPixels()
cc.SpriteFrame:setOriginalSize(size_table)
cc.SpriteFrame:getOriginalSizeInPixels()
cc.SpriteFrame:setOriginalSizeInPixels(size_table)
cc.SpriteFrame:setOffset(vec2_table)
cc.SpriteFrame:isRotated()
cc.SpriteFrame:setRect(rect_table)
cc.SpriteFrame:getOffsetInPixels()
cc.SpriteFrame:getOriginalSize()
cc.SpriteFrame:create(string,rect_table,bool,vec2_table,size_table)
cc.SpriteFrame:createWithTexture(cc.Texture2D,rect_table,bool,vec2_table,size_table)
cc.SpriteFrameCache
cc.SpriteFrameCache:addSpriteFramesWithFile(string,cc.Texture2D)
cc.SpriteFrameCache:addSpriteFrame(cc.SpriteFrame,string)
cc.SpriteFrameCache:removeUnusedSpriteFrames()
cc.SpriteFrameCache:getSpriteFrameByName(string)
cc.SpriteFrameCache:removeSpriteFramesFromFile(string)
cc.SpriteFrameCache:init()
cc.SpriteFrameCache:removeSpriteFrames()
cc.SpriteFrameCache:removeSpriteFramesFromTexture(cc.Texture2D)
cc.SpriteFrameCache:removeSpriteFrameByName(string)
cc.SpriteFrameCache:destroyInstance()
cc.SpriteFrameCache:getInstance()
cc.StopGrid
cc.StopGrid:create()
cc.StopGrid:startWithTarget(cc.Node)
cc.StopGrid:clone()
cc.StopGrid:reverse()
cc.TableView
cc.TableView:updateCellAtIndex(long)
cc.TableView:setVerticalFillOrder(int)
cc.TableView:scrollViewDidZoom(cc.ScrollView)
cc.TableView:_updateContentSize()
cc.TableView:getVerticalFillOrder()
cc.TableView:removeCellAtIndex(long)
cc.TableView:initWithViewSize(size_table,cc.Node)
cc.TableView:scrollViewDidScroll(cc.ScrollView)
cc.TableView:reloadData()
cc.TableView:insertCellAtIndex(long)
cc.TableView:cellAtIndex(long)
cc.TableView:dequeueCell()
cc.TableView:onTouchMoved(cc.Touch,cc.Event)
cc.TableView:onTouchEnded(cc.Touch,cc.Event)
cc.TableView:onTouchCancelled(cc.Touch,cc.Event)
cc.TableView:onTouchBegan(cc.Touch,cc.Event)
cc.TableView:TableView()
cc.TableViewCell
cc.TableViewCell:reset()
cc.TableViewCell:getIdx()
cc.TableViewCell:setIdx(long)
cc.TableViewCell:create()
cc.TableViewCell:TableViewCell()
cc.TargetedAction
cc.TargetedAction:getForcedTarget()
cc.TargetedAction:setForcedTarget(cc.Node)
cc.TargetedAction:create(cc.Node,cc.FiniteTimeAction)
cc.TargetedAction:startWithTarget(cc.Node)
cc.TargetedAction:clone()
cc.TargetedAction:stop()
cc.TargetedAction:reverse()
cc.TargetedAction:update(float)
ccui.Text
ccui.Text:getStringLength()
ccui.Text:setFontName(string)
ccui.Text:setTouchScaleChangeEnabled(bool)
ccui.Text:getFontSize()
ccui.Text:enableOutline(color4b_table,int)
ccui.Text:getTextVerticalAlignment()
ccui.Text:getString()
ccui.Text:enableShadow()
ccui.Text:setString(string)
ccui.Text:getTextHorizontalAlignment()
ccui.Text:setTextVerticalAlignment(int)
ccui.Text:enableGlow(color4b_table)
ccui.Text:getTextAreaSize()
ccui.Text:setTextHorizontalAlignment(int)
ccui.Text:setFontSize(int)
ccui.Text:isTouchScaleChangeEnabled()
ccui.Text:getType()
ccui.Text:disableEffect()
ccui.Text:getFontName()
ccui.Text:setTextAreaSize(size_table)
ccui.Text:create(string,string,int)
ccui.Text:createInstance()
ccui.Text:getVirtualRenderer()
ccui.Text:getDescription()
ccui.Text:getVirtualRendererSize()
ccui.Text:Text()
ccui.TextAtlas
ccui.TextAtlas:getStringLength()
ccui.TextAtlas:getString()
ccui.TextAtlas:setString(string)
ccui.TextAtlas:setProperty(string,string,int,int,string)
ccui.TextAtlas:adaptRenderers()
ccui.TextAtlas:create(string,string,int,int,string)
ccui.TextAtlas:createInstance()
ccui.TextAtlas:getVirtualRenderer()
ccui.TextAtlas:getDescription()
ccui.TextAtlas:getVirtualRendererSize()
ccui.TextAtlas:TextAtlas()
ccui.TextBMFont
ccui.TextBMFont:setFntFile(string)
ccui.TextBMFont:getStringLength()
ccui.TextBMFont:setString(string)
ccui.TextBMFont:getString()
ccui.TextBMFont:create(string,string)
ccui.TextBMFont:createInstance()
ccui.TextBMFont:getVirtualRenderer()
ccui.TextBMFont:getDescription()
ccui.TextBMFont:getVirtualRendererSize()
ccui.TextBMFont:TextBMFont()
ccui.TextField
ccui.TextField:setAttachWithIME(bool)
ccui.TextField:getFontSize()
ccui.TextField:getStringValue()
ccui.TextField:getDeleteBackward()
ccui.TextField:getPlaceHolder()
ccui.TextField:getAttachWithIME()
ccui.TextField:setFontName(string)
ccui.TextField:getInsertText()
ccui.TextField:setInsertText(bool)
ccui.TextField:getDetachWithIME()
ccui.TextField:setTextVerticalAlignment(int)
ccui.TextField:addEventListener(function)
ccui.TextField:didNotSelectSelf()
ccui.TextField:getFontName()
ccui.TextField:setTextAreaSize(size_table)
ccui.TextField:attachWithIME()
ccui.TextField:getStringLength()
ccui.TextField:setPasswordEnabled(bool)
ccui.TextField:getPasswordStyleText()
ccui.TextField:setMaxLengthEnabled(bool)
ccui.TextField:setPasswordStyleText(char)
ccui.TextField:setDeleteBackward(bool)
ccui.TextField:setFontSize(int)
ccui.TextField:setPlaceHolder(string)
ccui.TextField:isPasswordEnabled()
ccui.TextField:setTextHorizontalAlignment(int)
ccui.TextField:getMaxLength()
ccui.TextField:isMaxLengthEnabled()
ccui.TextField:setDetachWithIME(bool)
ccui.TextField:setText(string)
ccui.TextField:setTouchAreaEnabled(bool)
ccui.TextField:hitTest(vec2_table)
ccui.TextField:setMaxLength(int)
ccui.TextField:setTouchSize(size_table)
ccui.TextField:getTouchSize()
ccui.TextField:create(string,string,int)
ccui.TextField:createInstance()
ccui.TextField:getVirtualRenderer()
ccui.TextField:getDescription()
ccui.TextField:update(float)
ccui.TextField:getVirtualRendererSize()
ccui.TextField:TextField()
cc.Texture
cc.Texture:getMaxT()
cc.Texture:getStringForFormat()
cc.Texture:initWithImage(cc.Image,int)
cc.Texture:getMaxS()
cc.Texture:releaseGLTexture()
cc.Texture:hasPremultipliedAlpha()
cc.Texture:getPixelsHigh()
cc.Texture:getBitsPerPixelForFormat(int)
cc.Texture:getName()
cc.Texture:initWithString(char,string,float,size_table,int,int)
cc.Texture:setMaxT(float)
cc.Texture:drawInRect(rect_table)
cc.Texture:getContentSize()
cc.Texture:setAliasTexParameters()
cc.Texture:setAntiAliasTexParameters()
cc.Texture:generateMipmap()
cc.Texture:getDescription()
cc.Texture:getPixelFormat()
cc.Texture:setGLProgram(cc.GLProgram)
cc.Texture:getContentSizeInPixels()
cc.Texture:getPixelsWide()
cc.Texture:drawAtPoint(vec2_table)
cc.Texture:getGLProgram()
cc.Texture:hasMipmaps()
cc.Texture:setMaxS(float)
cc.Texture:setDefaultAlphaPixelFormat(int)
cc.Texture:getDefaultAlphaPixelFormat()
cc.Texture:PVRImagesHavePremultipliedAlpha(bool)
cc.Texture:2D()
cc.TextureCache
cc.TextureCache:reloadTexture(string)
cc.TextureCache:unbindAllImageAsync()
cc.TextureCache:removeTextureForKey(string)
cc.TextureCache:removeAllTextures()
cc.TextureCache:getDescription()
cc.TextureCache:getCachedTextureInfo()
cc.TextureCache:addImage(cc.Image,string)
cc.TextureCache:unbindImageAsync(string)
cc.TextureCache:getTextureForKey(string)
cc.TextureCache:removeUnusedTextures()
cc.TextureCache:removeTexture(cc.Texture2D)
cc.TextureCache:waitForQuit()
cc.TextureCache:TextureCache()
ccs.TextureData
ccs.TextureData:getContourData(int)
ccs.TextureData:init()
ccs.TextureData:addContourData(ccs.ContourData)
ccs.TextureData:create()
ccs.TextureData:TextureData()
ccs.TextureFrame
ccs.TextureFrame:getTextureName()
ccs.TextureFrame:setNode(cc.Node)
ccs.TextureFrame:setTextureName(string)
ccs.TextureFrame:create()
ccs.TextureFrame:clone()
ccs.TextureFrame:TextureFrame()
cc.TiledGrid
cc.TiledGrid:create(size_table,cc.Texture2D,bool)
cc.TiledGrid:calculateVertexPoints()
cc.TiledGrid:blit()
cc.TiledGrid:reuse()
cc.TiledGrid:3D()
cc.TiledGrid:getGrid()
cc.TiledGrid:clone()
cc.TileMapAtlas
cc.TileMapAtlas:initWithTileFile(string,string,int,int)
cc.TileMapAtlas:releaseMap()
cc.TileMapAtlas:getTileAt(vec2_table)
cc.TileMapAtlas:setTile(color3b_table,vec2_table)
cc.TileMapAtlas:create(string,string,int,int)
cc.TileMapAtlas:TileMapAtlas()
ccs.Timeline
ccs.Timeline:clone()
ccs.Timeline:gotoFrame(int)
ccs.Timeline:setNode(cc.Node)
ccs.Timeline:getActionTimeline()
ccs.Timeline:insertFrame(ccs.Frame,int)
ccs.Timeline:setActionTag(int)
ccs.Timeline:addFrame(ccs.Frame)
ccs.Timeline:getFrames()
ccs.Timeline:getActionTag()
ccs.Timeline:getNode()
ccs.Timeline:removeFrame(ccs.Frame)
ccs.Timeline:setActionTimeline(ccs.ActionTimeline)
ccs.Timeline:stepToFrame(int)
ccs.Timeline:create()
ccs.Timeline:Timeline()
cc.Timer
cc.Timer:getInterval()
cc.Timer:setupTimerWithInterval(float,unsigned,float)
cc.Timer:setInterval(float)
cc.Timer:update(float)
cc.Timer:trigger()
cc.Timer:cancel()
cc.TintBy
cc.TintBy:create(float,short,short,short)
cc.TintBy:startWithTarget(cc.Node)
cc.TintBy:clone()
cc.TintBy:reverse()
cc.TintBy:update(float)
cc.TintTo
cc.TintTo:create(float,unsigned,unsigned,unsigned)
cc.TintTo:startWithTarget(cc.Node)
cc.TintTo:clone()
cc.TintTo:reverse()
cc.TintTo:update(float)
ccexp.TMXLayer
ccexp.TMXLayer:getPositionAt(vec2_table)
ccexp.TMXLayer:setLayerOrientation(int)
ccexp.TMXLayer:getLayerSize()
ccexp.TMXLayer:setMapTileSize(size_table)
ccexp.TMXLayer:getLayerOrientation()
ccexp.TMXLayer:setProperties(map_table)
ccexp.TMXLayer:setLayerName(string)
ccexp.TMXLayer:removeTileAt(vec2_table)
ccexp.TMXLayer:getProperties()
ccexp.TMXLayer:setupTiles()
ccexp.TMXLayer:setupTileSprite(cc.Sprite,vec2_table,int)
ccexp.TMXLayer:setTileGID(int,vec2_table,int)
ccexp.TMXLayer:getMapTileSize()
ccexp.TMXLayer:getProperty(string)
ccexp.TMXLayer:setLayerSize(size_table)
ccexp.TMXLayer:getLayerName()
ccexp.TMXLayer:setTileSet(cc.TMXTilesetInfo)
ccexp.TMXLayer:getTileSet()
ccexp.TMXLayer:getTileAt(vec2_table)
ccexp.TMXLayer:create(cc.TMXTilesetInfo,cc.TMXLayerInfo,cc.TMXMapInfo)
ccexp.TMXLayer:removeChild(cc.Node,bool)
ccexp.TMXLayer:draw(cc.Renderer,mat4_table,unsigned)
ccexp.TMXLayer:getDescription()
ccexp.TMXLayer:TMXLayer()
cc.TMXLayerInfo
cc.TMXLayerInfo:setProperties(map_table)
cc.TMXLayerInfo:getProperties()
cc.TMXLayerInfo:TMXLayerInfo()
cc.TMXMapInfo
cc.TMXMapInfo:setObjectGroups(array_table)
cc.TMXMapInfo:setTileSize(size_table)
cc.TMXMapInfo:initWithTMXFile(string)
cc.TMXMapInfo:getOrientation()
cc.TMXMapInfo:isStoringCharacters()
cc.TMXMapInfo:setLayers(array_table)
cc.TMXMapInfo:parseXMLFile(string)
cc.TMXMapInfo:getParentElement()
cc.TMXMapInfo:setTMXFileName(string)
cc.TMXMapInfo:parseXMLString(string)
cc.TMXMapInfo:getLayers()
cc.TMXMapInfo:getTilesets()
cc.TMXMapInfo:getParentGID()
cc.TMXMapInfo:setParentElement(int)
cc.TMXMapInfo:initWithXML(string,string)
cc.TMXMapInfo:setParentGID(int)
cc.TMXMapInfo:getLayerAttribs()
cc.TMXMapInfo:getTileSize()
cc.TMXMapInfo:getTileProperties()
cc.TMXMapInfo:getObjectGroups()
cc.TMXMapInfo:getTMXFileName()
cc.TMXMapInfo:setCurrentString(string)
cc.TMXMapInfo:setProperties(map_table)
cc.TMXMapInfo:setOrientation(int)
cc.TMXMapInfo:setTileProperties(map_table)
cc.TMXMapInfo:setMapSize(size_table)
cc.TMXMapInfo:setStoringCharacters(bool)
cc.TMXMapInfo:getMapSize()
cc.TMXMapInfo:setTilesets(array_table)
cc.TMXMapInfo:getProperties()
cc.TMXMapInfo:getCurrentString()
cc.TMXMapInfo:setLayerAttribs(int)
cc.TMXMapInfo:create(string)
cc.TMXMapInfo:createWithXML(string,string)
cc.TMXMapInfo:TMXMapInfo()
cc.TMXObjectGroup
cc.TMXObjectGroup:setPositionOffset(vec2_table)
cc.TMXObjectGroup:getProperty(string)
cc.TMXObjectGroup:getPositionOffset()
cc.TMXObjectGroup:getObject(string)
cc.TMXObjectGroup:getObjects()
cc.TMXObjectGroup:setGroupName(string)
cc.TMXObjectGroup:getProperties()
cc.TMXObjectGroup:getGroupName()
cc.TMXObjectGroup:setProperties(map_table)
cc.TMXObjectGroup:setObjects(array_table)
cc.TMXObjectGroup:TMXObjectGroup()
ccexp.TMXTiledMap
ccexp.TMXTiledMap:setObjectGroups(array_table)
ccexp.TMXTiledMap:getProperty(string)
ccexp.TMXTiledMap:setMapSize(size_table)
ccexp.TMXTiledMap:getObjectGroup(string)
ccexp.TMXTiledMap:getObjectGroups()
ccexp.TMXTiledMap:getTileSize()
ccexp.TMXTiledMap:getMapSize()
ccexp.TMXTiledMap:getProperties()
ccexp.TMXTiledMap:getPropertiesForGID(int)
ccexp.TMXTiledMap:setTileSize(size_table)
ccexp.TMXTiledMap:setProperties(map_table)
ccexp.TMXTiledMap:getLayer(string)
ccexp.TMXTiledMap:getMapOrientation()
ccexp.TMXTiledMap:setMapOrientation(int)
ccexp.TMXTiledMap:create(string)
ccexp.TMXTiledMap:createWithXML(string,string)
ccexp.TMXTiledMap:getDescription()
cc.TMXTilesetInfo
cc.TMXTilesetInfo:getRectForGID(unsigned)
cc.TMXTilesetInfo:TMXTilesetInfo()
cc.ToggleVisibility
cc.ToggleVisibility:create()
cc.ToggleVisibility:clone()
cc.ToggleVisibility:update(float)
cc.ToggleVisibility:reverse()
cc.Touch
cc.Touch:getPreviousLocationInView()
cc.Touch:getLocation()
cc.Touch:getDelta()
cc.Touch:getStartLocationInView()
cc.Touch:getStartLocation()
cc.Touch:getID()
cc.Touch:setTouchInfo(int,float,float)
cc.Touch:getLocationInView()
cc.Touch:getPreviousLocation()
cc.Touch:Touch()
cc.TransitionCrossFade
cc.TransitionCrossFade:create(float,cc.Scene)
cc.TransitionCrossFade:draw(cc.Renderer,mat4_table,unsigned)
cc.TransitionEaseScene
cc.TransitionEaseScene:easeActionWithAction(cc.ActionInterval)
cc.TransitionFade
cc.TransitionFade:create(float,cc.Scene,color3b_table)
cc.TransitionFadeBL
cc.TransitionFadeBL:create(float,cc.Scene)
cc.TransitionFadeBL:actionWithSize(size_table)
cc.TransitionFadeDown
cc.TransitionFadeDown:create(float,cc.Scene)
cc.TransitionFadeDown:actionWithSize(size_table)
cc.TransitionFadeTR
cc.TransitionFadeTR:easeActionWithAction(cc.ActionInterval)
cc.TransitionFadeTR:actionWithSize(size_table)
cc.TransitionFadeTR:create(float,cc.Scene)
cc.TransitionFadeTR:draw(cc.Renderer,mat4_table,unsigned)
cc.TransitionFadeUp
cc.TransitionFadeUp:create(float,cc.Scene)
cc.TransitionFadeUp:actionWithSize(size_table)
cc.TransitionFlipAngular
cc.TransitionFlipAngular:create(float,cc.Scene,int)
cc.TransitionFlipX
cc.TransitionFlipX:create(float,cc.Scene,int)
cc.TransitionFlipY
cc.TransitionFlipY:create(float,cc.Scene,int)
cc.TransitionJumpZoom
cc.TransitionJumpZoom:create(float,cc.Scene)
cc.TransitionMoveInB
cc.TransitionMoveInB:create(float,cc.Scene)
cc.TransitionMoveInL
cc.TransitionMoveInL:action()
cc.TransitionMoveInL:easeActionWithAction(cc.ActionInterval)
cc.TransitionMoveInL:create(float,cc.Scene)
cc.TransitionMoveInR
cc.TransitionMoveInR:create(float,cc.Scene)
cc.TransitionMoveInT
cc.TransitionMoveInT:create(float,cc.Scene)
cc.TransitionPageTurn
cc.TransitionPageTurn:actionWithSize(size_table)
cc.TransitionPageTurn:initWithDuration(float,cc.Scene,bool)
cc.TransitionPageTurn:create(float,cc.Scene,bool)
cc.TransitionPageTurn:draw(cc.Renderer,mat4_table,unsigned)
cc.TransitionProgress
cc.TransitionProgress:create(float,cc.Scene)
cc.TransitionProgressHorizontal
cc.TransitionProgressHorizontal:create(float,cc.Scene)
cc.TransitionProgressInOut
cc.TransitionProgressInOut:create(float,cc.Scene)
cc.TransitionProgressOutIn
cc.TransitionProgressOutIn:create(float,cc.Scene)
cc.TransitionProgressRadialCCW
cc.TransitionProgressRadialCCW:create(float,cc.Scene)
cc.TransitionProgressRadialCW
cc.TransitionProgressRadialCW:create(float,cc.Scene)
cc.TransitionProgressVertical
cc.TransitionProgressVertical:create(float,cc.Scene)
cc.TransitionRotoZoom
cc.TransitionRotoZoom:create(float,cc.Scene)
cc.TransitionScene
cc.TransitionScene:finish()
cc.TransitionScene:hideOutShowIn()
cc.TransitionScene:create(float,cc.Scene)
cc.TransitionScene:draw(cc.Renderer,mat4_table,unsigned)
cc.TransitionScene:cleanup()
cc.TransitionSceneOriented
cc.TransitionSceneOriented:create(float,cc.Scene,int)
cc.TransitionShrinkGrow
cc.TransitionShrinkGrow:easeActionWithAction(cc.ActionInterval)
cc.TransitionShrinkGrow:create(float,cc.Scene)
cc.TransitionSlideInB
cc.TransitionSlideInB:action()
cc.TransitionSlideInB:create(float,cc.Scene)
cc.TransitionSlideInL
cc.TransitionSlideInL:action()
cc.TransitionSlideInL:easeActionWithAction(cc.ActionInterval)
cc.TransitionSlideInL:create(float,cc.Scene)
cc.TransitionSlideInR
cc.TransitionSlideInR:action()
cc.TransitionSlideInR:create(float,cc.Scene)
cc.TransitionSlideInT
cc.TransitionSlideInT:action()
cc.TransitionSlideInT:create(float,cc.Scene)
cc.TransitionSplitCols
cc.TransitionSplitCols:action()
cc.TransitionSplitCols:easeActionWithAction(cc.ActionInterval)
cc.TransitionSplitCols:create(float,cc.Scene)
cc.TransitionSplitCols:draw(cc.Renderer,mat4_table,unsigned)
cc.TransitionSplitRows
cc.TransitionSplitRows:create(float,cc.Scene)
cc.TransitionSplitRows:action()
cc.TransitionTurnOffTiles
cc.TransitionTurnOffTiles:easeActionWithAction(cc.ActionInterval)
cc.TransitionTurnOffTiles:create(float,cc.Scene)
cc.TransitionTurnOffTiles:draw(cc.Renderer,mat4_table,unsigned)
cc.TransitionZoomFlipAngular
cc.TransitionZoomFlipAngular:create(float,cc.Scene,int)
cc.TransitionZoomFlipX
cc.TransitionZoomFlipX:create(float,cc.Scene,int)
cc.TransitionZoomFlipY
cc.TransitionZoomFlipY:create(float,cc.Scene,int)
cc.TurnOffTiles
cc.TurnOffTiles:turnOnTile(vec2_table)
cc.TurnOffTiles:turnOffTile(vec2_table)
cc.TurnOffTiles:create(float,size_table,unsigned)
cc.TurnOffTiles:startWithTarget(cc.Node)
cc.TurnOffTiles:clone()
cc.TurnOffTiles:update(float)
ccs.Tween
ccs.Tween:getAnimation()
ccs.Tween:gotoAndPause(int)
ccs.Tween:play(ccs.MovementBoneData,int,int,int,int)
ccs.Tween:gotoAndPlay(int)
ccs.Tween:init(ccs.Bone)
ccs.Tween:setAnimation(ccs.ArmatureAnimation)
ccs.Tween:create(ccs.Bone)
ccs.Tween:Tween()
cc.Twirl
cc.Twirl:setAmplitudeRate(float)
cc.Twirl:getAmplitudeRate()
cc.Twirl:setAmplitude(float)
cc.Twirl:getAmplitude()
cc.Twirl:setPosition(vec2_table)
cc.Twirl:getPosition()
cc.Twirl:create(float,size_table,vec2_table,unsigned,float)
cc.Twirl:clone()
cc.Twirl:update(float)
cc.UserDefault
cc.UserDefault:setIntegerForKey(char,int)
cc.UserDefault:getFloatForKey(char,float)
cc.UserDefault:getBoolForKey(char,bool)
cc.UserDefault:setDoubleForKey(char,double)
cc.UserDefault:setFloatForKey(char,float)
cc.UserDefault:getStringForKey(char,string)
cc.UserDefault:setStringForKey(char,string)
cc.UserDefault:flush()
cc.UserDefault:getIntegerForKey(char,int)
cc.UserDefault:getDoubleForKey(char,double)
cc.UserDefault:setBoolForKey(char,bool)
cc.UserDefault:destroyInstance()
cc.UserDefault:getXMLFilePath()
cc.UserDefault:isXMLFileExist()
ccui.VBox
ccui.VBox:create(size_table)
ccui.VBox:VBox()
ccexp.VideoPlayer
ccexp.VideoPlayer:getFileName()
ccexp.VideoPlayer:getURL()
ccexp.VideoPlayer:play()
ccexp.VideoPlayer:pause()
ccexp.VideoPlayer:setKeepAspectRatioEnabled(bool)
ccexp.VideoPlayer:resume()
ccexp.VideoPlayer:stop()
ccexp.VideoPlayer:setFullScreenEnabled(bool)
ccexp.VideoPlayer:setFileName(string)
ccexp.VideoPlayer:setURL(string)
ccexp.VideoPlayer:isKeepAspectRatioEnabled()
ccexp.VideoPlayer:onPlayEvent(int)
ccexp.VideoPlayer:isFullScreenEnabled()
ccexp.VideoPlayer:isPlaying()
ccexp.VideoPlayer:seekTo(float)
ccexp.VideoPlayer:create()
ccexp.VideoPlayer:draw(cc.Renderer,mat4_table,unsigned)
ccexp.VideoPlayer:setVisible(bool)
ccs.VisibleFrame
ccs.VisibleFrame:isVisible()
ccs.VisibleFrame:setVisible(bool)
ccs.VisibleFrame:create()
ccs.VisibleFrame:clone()
ccs.VisibleFrame:VisibleFrame()
cc.Waves
cc.Waves:getAmplitudeRate()
cc.Waves:setAmplitude(float)
cc.Waves:setAmplitudeRate(float)
cc.Waves:getAmplitude()
cc.Waves:create(float,size_table,unsigned,float,bool,bool)
cc.Waves:clone()
cc.Waves:update(float)
cc.Waves:create(float,size_table,unsigned,float)
cc.WavesTiles
cc.WavesTiles:getAmplitudeRate()
cc.WavesTiles:setAmplitude(float)
cc.WavesTiles:setAmplitudeRate(float)
cc.WavesTiles:getAmplitude()
cc.WavesTiles:create(float,size_table,unsigned,float)
cc.WavesTiles:clone()
cc.WavesTiles:update(float)
ccui.Widget
ccui.Widget:setSizePercent(vec2_table)
ccui.Widget:getCustomSize()
ccui.Widget:setFlippedY(bool)
ccui.Widget:setFlippedX(bool)
ccui.Widget:getVirtualRenderer()
ccui.Widget:getSizePercent()
ccui.Widget:setPositionPercent(vec2_table)
ccui.Widget:getLayoutSize()
ccui.Widget:setHighlighted(bool)
ccui.Widget:setPositionType(int)
ccui.Widget:isIgnoreContentAdaptWithSize()
ccui.Widget:getVirtualRendererSize()
ccui.Widget:isHighlighted()
ccui.Widget:getLayoutParameter()
ccui.Widget:findNextFocusedWidget(int,ccui.Widget)
ccui.Widget:getPositionType()
ccui.Widget:getTopBoundary()
ccui.Widget:ignoreContentAdaptWithSize(bool)
ccui.Widget:isEnabled()
ccui.Widget:isFocused()
ccui.Widget:getTouchBeganPosition()
ccui.Widget:isTouchEnabled()
ccui.Widget:getActionTag()
ccui.Widget:getWorldPosition()
ccui.Widget:setFocused(bool)
ccui.Widget:setActionTag(int)
ccui.Widget:setTouchEnabled(bool)
ccui.Widget:getLeftBoundary()
ccui.Widget:setEnabled(bool)
ccui.Widget:getRightBoundary()
ccui.Widget:setBrightStyle(int)
ccui.Widget:setLayoutParameter(ccui.LayoutParameter)
ccui.Widget:clone()
ccui.Widget:setFocusEnabled(bool)
ccui.Widget:getBottomBoundary()
ccui.Widget:isBright()
ccui.Widget:getCurrentFocusedWidget()
ccui.Widget:requestFocus()
ccui.Widget:updateSizeAndPosition(size_table)
ccui.Widget:getTouchMovePosition()
ccui.Widget:getSizeType()
ccui.Widget:addTouchEventListener(function)
ccui.Widget:getTouchEndPosition()
ccui.Widget:getPositionPercent()
ccui.Widget:hitTest(vec2_table)
ccui.Widget:isFlippedX()
ccui.Widget:isFlippedY()
ccui.Widget:isClippingParentContainsPoint(vec2_table)
ccui.Widget:setSizeType(int)
ccui.Widget:setBright(bool)
ccui.Widget:isFocusEnabled()
ccui.Widget:enableDpadNavigation(bool)
ccui.Widget:create()
ccui.Widget:getDescription()
ccui.Widget:setPosition(vec2_table)
ccui.Widget:setContentSize(size_table)
ccui.Widget:Widget()
ZOrderFrame
ccs.ZOrderFrame:getZOrder()
ccs.ZOrderFrame:setZOrder(int)
ccs.ZOrderFrame:create()
ccs.ZOrderFrame:clone()